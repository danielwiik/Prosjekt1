<project xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.kw-software.com/xml/PLCopen/TC6_XML_V10_KW.xsd">
	<fileHeader companyName="Phoenix Contact" companyURL="https://www.phoenixcontact-software.com" productName="PC WORX" productVersion="6.30" productRelease="Build 245" creationDateTime="2017-11-14T14:32:35" contentDescription="###XMLINFO=1;1;"/>
	<contentHeader name="ATSapplic_DW_01_GIT" version="1510666355" modificationDateTime="2017-11-14T14:32:35" connectionCheck="true">
		<coordinateInfo>
			<pageSize x="999" y="9999"/>
			<fbd>
				<scaling x="2" y="2"/>
			</fbd>
			<ld>
				<scaling x="2" y="2"/>
			</ld>
			<sfc>
				<scaling x="2" y="2"/>
			</sfc>
		</coordinateInfo>
	</contentHeader>
	<types>
		<dataTypes/>
		<pous>
			<pou name="FB_FileHandling_01" pouType="functionBlock" pouGroup="Function_Blocks" lastChange="2016-11-17T12:48:29">
				<interface>
					<inputVars retain="false">
						<variable name="xActivateOutputData" group="Input Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">trigger to write process data</p>
								</html>
							</documentation>
						</variable>
						<variable name="xWriteCurrent" group="Input Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">trigger to save measured current</p>
								</html>
							</documentation>
						</variable>
						<variable name="xCommissioning" group="Input Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">En- / disable commissioning mode</p>
								</html>
							</documentation>
						</variable>
						<variable name="iSelectBranch" group="Input Parameter">
							<type>
								<INT/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Branch selection for commissiong mode</p>
								</html>
							</documentation>
						</variable>
						<variable name="xReadConfigFiles" group="Input Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">trigger read configuration files</p>
								</html>
							</documentation>
						</variable>
						<variable name="arrActIP_Address" group="Input Parameter">
							<type>
								<derived name="TB_ARR_B_1_4"/>
							</type>
						</variable>
						<variable name="arrActSubnetMask" group="Input Parameter">
							<type>
								<derived name="TB_ARR_B_1_4"/>
							</type>
						</variable>
						<variable name="arrActStdGateway" group="Input Parameter">
							<type>
								<derived name="TB_ARR_B_1_4"/>
							</type>
						</variable>
					</inputVars>
					<outputVars retain="false">
						<variable name="xAlarm" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Alarm occurs</p>
								</html>
							</documentation>
						</variable>
						<variable name="xPreAlarm" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Warning occurs</p>
								</html>
							</documentation>
						</variable>
						<variable name="strDiag" group="Output Parameter">
							<type>
								<string length="80"/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Diagnostic text</p>
								</html>
							</documentation>
						</variable>
						<variable name="xStartupProcessDone" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Trigger startup process finished</p>
								</html>
							</documentation>
						</variable>
						<variable name="xIBConfigSaved" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iDelay" group="Output Parameter">
							<type>
								<INT/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Scene delay value from threshold config file "1"</p>
								</html>
							</documentation>
						</variable>
						<variable name="xRequestStartupIB" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Trigger ready to startup interbus</p>
								</html>
							</documentation>
						</variable>
						<variable name="xNetworkConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "Network" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xLumgateConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "Lumgate" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xL20ConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "L20" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xThreshold1ConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "Threshold 1" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xThreshold2ConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "Threshold 2" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xThreshold3ConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "Threshold 3" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xThreshold4ConfigFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configuration file "Threshold 4" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="arrSegment" group="Output Parameter">
							<type>
								<derived name="ARR_I_1_4"/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Configured count of Lumgates per segment</p>
								</html>
							</documentation>
						</variable>
						<variable name="udtProjectDescription" group="Output Parameter">
							<type>
								<derived name="udtProjectSpecification"/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Project description (Name, Location, Designer...)</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedNetFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "Network" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedLumgateFileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "Lumgate" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedL20FileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "L20" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold1FileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "Threshold 1" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold2FileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "Threshold 2" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold3FileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "Threshold 3" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold4FileExist" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Modified configuration file "Threshold 4" exist</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedLumgate" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Lumgate modification detected</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedNetConfig" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Network modification detected</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedL20Config" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">L20 modification detected</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold1" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Threshold 1 modification detected</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold2" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Threshold 2 modification detected</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold3" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Threshold 3 modification detected</p>
								</html>
							</documentation>
						</variable>
						<variable name="xChangedThreshold4" group="Output Parameter">
							<type>
								<BOOL/>
							</type>
							<documentation>
								<html xmlns="http://www.w3.org/1999/xhtml">
									<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">Threshold 4 modification detected</p>
								</html>
							</documentation>
						</variable>
					</outputVars>
					<inOutVars retain="false">
						<variable name="arrLumgates" group="In- Output Parameter">
							<type>
								<derived name="arr_1_240_udtLumgate"/>
							</type>
						</variable>
						<variable name="arrLumgateConfig" group="In- Output Parameter">
							<type>
								<derived name="arr_1_240_udtLG_Config"/>
							</type>
						</variable>
						<variable name="arrLumgateCurrentConsumption" group="In- Output Parameter">
							<type>
								<derived name="Arr_1_240_1_23_Int"/>
							</type>
						</variable>
						<variable name="udtNetworkConfiguration" group="In- Output Parameter">
							<type>
								<derived name="udtNetwork"/>
							</type>
						</variable>
						<variable name="udtActNetworkConfiguration" group="In- Output Parameter">
							<type>
								<derived name="udtNetwork"/>
							</type>
						</variable>
						<variable name="arrScenarioConfiguration_L20_1" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="arrScenarioConfiguration_L20_2" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="arrScenarioConfiguration_L20_3" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="arrScenarioConfiguration_L20_4" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="udtLevelConfiguration_L20_1" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtLevelConfiguration_L20_2" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtLevelConfiguration_L20_3" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtLevelConfiguration_L20_4" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtActThresholdConfig1" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtActThresholdConfig2" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtActThresholdConfig3" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="udtActThresholdConfig4" group="In- Output Parameter">
							<type>
								<derived name="udtL20Config"/>
							</type>
						</variable>
						<variable name="xWriteFile" group="In- Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xTakeActualConfig" group="In- Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="udtConfigFiles" group="In- Output Parameter">
							<type>
								<derived name="udt_WebDataConfigFiles"/>
							</type>
						</variable>
						<variable name="udtFileHandler" group="In- Output Parameter">
							<type>
								<derived name="udtFileHandling"/>
							</type>
						</variable>
						<variable name="arr_Inputs_L20" group="In- Output Parameter">
							<type>
								<derived name="arr_1_4_udtAnalogInput"/>
							</type>
						</variable>
						<variable name="arrActL20Inputs" group="In- Output Parameter">
							<type>
								<derived name="arr_1_4_udtAnalogInput"/>
							</type>
						</variable>
						<variable name="udtL20Config" group="In- Output Parameter">
							<type>
								<derived name="udtL20Input"/>
							</type>
						</variable>
						<variable name="udtActL20Config" group="In- Output Parameter">
							<type>
								<derived name="udtL20Input"/>
							</type>
						</variable>
					</inOutVars>
					<localVars retain="false">
						<variable name="arrActScenarioConfig_L20_1" redundant="true" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="arrActScenarioConfig_L20_2" redundant="true" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="arrActScenarioConfig_L20_3" redundant="true" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="arrActScenarioConfig_L20_4" redundant="true" group="In- Output Parameter">
							<type>
								<derived name="ARR_1_25_1_5_Int"/>
							</type>
						</variable>
						<variable name="xChangedLumgate1" redundant="true" group="In- Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xChangedLumgate2" redundant="true" group="In- Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xChangedLumgate3" redundant="true" group="In- Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xChangedLumgate4" redundant="true" group="In- Output Parameter">
							<type>
								<BOOL/>
							</type>
						</variable>
					</localVars>
					<localVars retain="true">
						<variable name="arrHourCountersType1" group="Local Variables">
							<type>
								<derived name="arr_1_240_udtLumgatePart1"/>
							</type>
						</variable>
						<variable name="arrHourCountersType2" redundant="true" group="Local Variables">
							<type>
								<derived name="arr_1_240_udtLumgatePart1"/>
							</type>
						</variable>
						<variable name="arrHourCountersType3" redundant="true" group="Local Variables">
							<type>
								<derived name="arr_1_240_udtLumgatePart1"/>
							</type>
						</variable>
						<variable name="arrHourCountersType4" redundant="true" group="Local Variables">
							<type>
								<derived name="arr_1_240_udtLumgatePart1"/>
							</type>
						</variable>
						<variable name="arrHourCountersType5" redundant="true" group="Local Variables">
							<type>
								<derived name="arr_1_240_udtLumgatePart1"/>
							</type>
						</variable>
					</localVars>
					<localVars retain="false">
						<variable name="iConfigType" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iTable" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iCounter" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iGeneralControl" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xReadNetworkConfig" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFoError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="uiFoErrorId" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="xReadLumgateConfig" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iLineAnalyzer" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xReadLines" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iEndPosition" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iLoop" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iFindLines" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iBeginPosition" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xEmptyPositionFound" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iPositionSeparator1" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iPositionSeparator2" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="arrTempText" group="Local Variables">
							<type>
								<derived name="Arr_Str_1_209"/>
							</type>
						</variable>
						<variable name="iLength" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iElement" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iNumber" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xShiftToSpecial" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iPositionScene" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xWriteLumgateConfig" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xRequestWritingLumgateConfig" pdd="true" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iWriteLumgateConfig" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="strTempText" group="Local Variables">
							<type>
								<derived name="String_700"/>
							</type>
						</variable>
						<variable name="iTempPointer" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="sModuleLevel" group="Local Variables">
							<type>
								<derived name="String_5"/>
							</type>
						</variable>
						<variable name="sModuleNumber" redundant="true" group="Local Variables">
							<type>
								<derived name="String_5"/>
							</type>
						</variable>
						<variable name="strTempInfo" redundant="true" group="Local Variables">
							<type>
								<derived name="STRING_15"/>
							</type>
						</variable>
						<variable name="iLenght" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iBufferPosition" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iPositionActuelText" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xPartLeft" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iPosition" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig2" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig3" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig4" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iCompare" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="udiTempValue" redundant="true" group="Local Variables">
							<type>
								<UDINT/>
							</type>
						</variable>
						<variable name="iTemp" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="strTempValue2" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="iPosition2" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iLoop2" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iOldCompare" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xFoExecute" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFoDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xWaitFileHandling" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="strFoName" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="uiFoHandle" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="strLineData" redundant="true" group="Local Variables">
							<type>
								<derived name="String_700"/>
							</type>
						</variable>
						<variable name="xTranslateRequest" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="diTranslateOffset" group="Local Variables">
							<type>
								<DINT/>
							</type>
						</variable>
						<variable name="diTranslateCount" redundant="true" group="Local Variables">
							<type>
								<DINT/>
							</type>
						</variable>
						<variable name="xTranslateDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xTranslateError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iTranslateStatus" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xLineReady" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xCRFound" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xEnd" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iPositionCounter" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iType" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iLine" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iReadConfiguration" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="strTemp" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="xEmptyLine" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="strFirstCharacter" group="Local Variables">
							<type>
								<derived name="String_5"/>
							</type>
						</variable>
						<variable name="xIgnoreLine" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="iCommission" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="arrFBuffer" group="Local Variables">
							<type>
								<derived name="ARR_B_0_5000"/>
							</type>
						</variable>
						<variable name="xFsError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFwError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFcError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFrError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFreError" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="udFwLengthWritten" redundant="true" group="Local Variables">
							<type>
								<UDINT/>
							</type>
						</variable>
						<variable name="uiFsErrorId" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFwErrorId" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFcErrorId" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFrErrorId" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFreErrorId" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="xFsExecute" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFsDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFwExecute" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFwDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFcExecute" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFcDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFrExecute" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFrDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFreExecute" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xFreDone" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="diFsPosition" group="Local Variables">
							<type>
								<DINT/>
							</type>
						</variable>
						<variable name="iFileHandling" redundant="true" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="strFrName" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="udFwLength" redundant="true" group="Local Variables">
							<type>
								<UDINT/>
							</type>
						</variable>
						<variable name="udFreMaxLength" redundant="true" group="Local Variables">
							<type>
								<UDINT/>
							</type>
						</variable>
						<variable name="udFreLengthRead" redundant="true" group="Local Variables">
							<type>
								<UDINT/>
							</type>
						</variable>
						<variable name="udiTempAmount" redundant="true" group="Local Variables">
							<type>
								<UDINT/>
							</type>
						</variable>
						<variable name="uiFsHandle" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFsMode" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFwHandle" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFcHandle" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFreHandle" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFileHandleTarget" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="uiFileHandleSource" redundant="true" group="Local Variables">
							<type>
								<UINT/>
							</type>
						</variable>
						<variable name="xReadNetworkConfig_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadLumgateConfig_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadSensorConfig_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig1_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig2_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig3_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadThresholdConfig4_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xChangedFile" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xReadSensorConfig" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="strTempValue" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="iTempValue" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="iFileFormat" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="xDetectLumgateFormat" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xWriteFormatNumber" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
					</localVars>
					<localVars retain="true">
						<variable name="arrLGCurrentConsumption_01" group="Local Variables">
							<type>
								<derived name="Arr_1_240_1_23_Int"/>
							</type>
						</variable>
						<variable name="arrLGCurrentConsumption_10" redundant="true" group="Local Variables">
							<type>
								<derived name="Arr_1_240_1_23_Int"/>
							</type>
						</variable>
						<variable name="arrLGCurrentConsumption_11" redundant="true" group="Local Variables">
							<type>
								<derived name="Arr_1_240_1_23_Int"/>
							</type>
						</variable>
						<variable name="diAverageTime" group="Local Variables">
							<type>
								<DINT/>
							</type>
						</variable>
						<variable name="iHysteresis" group="Local Variables">
							<type>
								<INT/>
							</type>
						</variable>
						<variable name="strConfigurationName1_1" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName1_2" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName1_3" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName1_4" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName2_1" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName2_2" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName2_3" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName2_4" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName3_1" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName3_2" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName3_3" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName3_4" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName4_1" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName4_2" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName4_3" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="strConfigurationName4_4" redundant="true" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="xActiveConfig1_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig1_2" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig1_3" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig1_4" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig2_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig2_2" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig2_3" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig2_4" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig3_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig3_2" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig3_3" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig3_4" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig4_1" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig4_2" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig4_3" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="xActiveConfig4_4" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
					</localVars>
					<outputVars retain="false">
						<variable name="strLoadText" group="Local Variables">
							<type>
								<string length="80"/>
							</type>
						</variable>
						<variable name="rLoadMaker" group="Local Variables">
							<type>
								<REAL/>
							</type>
						</variable>
					</outputVars>
					<localVars retain="false">
						<variable name="FB_HelpSetIP_01_1" group="Local Variables">
							<type>
								<derived name="FB_HelpSetIP_01"/>
							</type>
						</variable>
						<variable name="xExecuteIP_Translate" redundant="true" group="Local Variables">
							<type>
								<BOOL/>
							</type>
						</variable>
						<variable name="arrIP_Address" group="Local Variables">
							<type>
								<derived name="TB_ARR_B_1_4"/>
							</type>
						</variable>
						<variable name="arrSubnetMask" group="Local Variables">
							<type>
								<derived name="TB_ARR_B_1_4"/>
							</type>
						</variable>
						<variable name="arrStdGateway" group="Local Variables">
							<type>
								<derived name="TB_ARR_B_1_4"/>
							</type>
						</variable>
						<variable name="TON_CompareDelay" group="Instances">
							<type>
								<derived name="TON"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedLumgate" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedThreshold1" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedThreshold2" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedThreshold3" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedThreshold4" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedNet" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="R_TRIG_ChangedL20" group="Instances">
							<type>
								<derived name="R_TRIG"/>
							</type>
						</variable>
						<variable name="F_TRIG_Commissioning" group="Instances">
							<type>
								<derived name="F_TRIG"/>
							</type>
						</variable>
						<variable name="File_Close_Flash" group="Instances">
							<type>
								<derived name="FILE_CLOSE"/>
							</type>
						</variable>
						<variable name="File_Open_Flash" group="Instances">
							<type>
								<derived name="FILE_OPEN"/>
							</type>
						</variable>
						<variable name="File_Read_Flash" group="Instances">
							<type>
								<derived name="FILE_READ"/>
							</type>
						</variable>
						<variable name="File_Remove_Flash" group="Instances">
							<type>
								<derived name="FILE_REMOVE"/>
							</type>
						</variable>
						<variable name="File_Seek_Flash" group="Instances">
							<type>
								<derived name="FILE_SEEK"/>
							</type>
						</variable>
						<variable name="File_Write_Flash" group="Instances">
							<type>
								<derived name="FILE_WRITE"/>
							</type>
						</variable>
						<variable name="TranslateData" group="Instances">
							<type>
								<derived name="BUF_TO_STRING"/>
							</type>
						</variable>
						<variable name="TON_Delay_Write" group="Instances">
							<type>
								<derived name="TON"/>
							</type>
						</variable>
					</localVars>
				</interface>
				<body>
					<ST>
						<worksheet name="FB_FileHandling_01">
							<html xmlns="http://www.w3.org/1999/xhtml">
								<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">(* FB_FileHandling *)<br/>(* move Commissioning block to Lumgate Controll *)<br/>	F_TRIG_Commissioning(CLK:=xCommissioning);<br/>
									<br/>	(* Decision: Normal mode or commissioning mode *) <br/>
									<br/>	(* Deactivate commissioning mode *)<br/>	If F_TRIG_Commissioning.Q then<br/>		strDiag			:=	'Commissioning Mode turned off';<br/>	End_if;<br/>	(* Reset manual mode *)<br/>	If not xCommissioning and iCommission &gt; 0 then<br/>		For iLoop := 1 to 240 do<br/>			arrLumgates[iLoop].xAutomaticManual		:=	False;<br/>			arrLumgates[iLoop].iOutputLevelManual	:=	0; <br/>		End_for;<br/>		iCommission		:=	0;<br/>	End_If;<br/>
									<br/>	Case iCommission Of<br/>		0:<br/>			If xCommissioning then<br/>				xPreAlarm		:=	True;<br/>				strDiag			:=	'Warning: Commissioning Mode is active';<br/>				For iLoop := 1 to 240 do	(* Set target brightness level to maximum and turn on the manual mode *)<br/>					If arrLumgates[iLoop].iModuleLevel = 0 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 1) then<br/>					arrLumgates[iLoop].iOutputLevelManual	:=	1070;<br/>						arrLumgates[iLoop].xAutomaticManual	:=	True;<br/>						iTemp								:=	iLoop;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 1 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 2) then<br/>					arrLumgates[iLoop].iOutputLevelManual	:=	1070;<br/>						arrLumgates[iLoop].xAutomaticManual	:=	True;<br/>						iTemp								:=	iLoop;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 2 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 3) then<br/>					arrLumgates[iLoop].iOutputLevelManual	:=	1070;<br/>						arrLumgates[iLoop].xAutomaticManual	:=	True;<br/>						iTemp								:=	iLoop;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 3 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 4) then<br/>					arrLumgates[iLoop].iOutputLevelManual	:=	1070;<br/>						arrLumgates[iLoop].xAutomaticManual	:=	True;<br/>						iTemp								:=	iLoop;<br/>					End_if;<br/>				End_For;<br/>				iCommission		:=	2;<br/>			End_If;<br/>
									<br/>		2:<br/>			For iLoop := 1 to 240 do	(* Set target brightness level to maximum , search for the last available Lumgate *)<br/>				If arrLumgates[iLoop].iModuleLevel = 0 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 1) then<br/>					arrLumgates[iLoop].iOutputLevelManual		:=	1070;<br/>					iTemp										:=	iLoop;<br/>				Elsif arrLumgates[iLoop].iModuleLevel = 1 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 2) then<br/>					arrLumgates[iLoop].iOutputLevelManual		:=	1070;<br/>					iTemp										:=	iLoop;<br/>				Elsif arrLumgates[iLoop].iModuleLevel = 2 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 3) then<br/>					arrLumgates[iLoop].iOutputLevelManual		:=	1070;<br/>					iTemp										:=	iLoop;<br/>				Elsif arrLumgates[iLoop].iModuleLevel = 3 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 4) then<br/>					arrLumgates[iLoop].iOutputLevelManual		:=	1070;<br/>					iTemp										:=	iLoop;<br/>				End_if;<br/>			End_For;<br/>			iCommission		:=	3;<br/>
									<br/>		3:<br/>			If arrLumgates[iTemp].iActualOutputLevel = 1070 then<br/>				(* Set the target brightness level to 12%, if the last Lumgate entered the maximum level *)<br/>				For iLoop := 1 To 240 do<br/>					If arrLumgates[iLoop].iModuleLevel = 0 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 1) then<br/>						arrLumgates[iLoop].iOutputLevelManual		:=	120;<br/>						iTemp										:=	iLoop;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 1 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 2) then<br/>						arrLumgates[iLoop].iOutputLevelManual		:=	120;<br/>						iTemp										:=	iLoop;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 2 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 3) then<br/>						arrLumgates[iLoop].iOutputLevelManual		:=	120;<br/>						iTemp										:=	iLoop;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 3 and arrLumgates[iLoop].xAvailable and (iSelectBranch = 0 or iSelectBranch = 4) then<br/>						arrLumgates[iLoop].iOutputLevelManual		:=	120;<br/>						iTemp										:=	iLoop;<br/>					End_if;<br/>				End_For;<br/>				iCommission	:=	4;<br/>			End_If;<br/>		<br/>		4:<br/>			If arrLumgates[iTemp].iActualOutputLevel &lt; 150 then<br/>				iCommission	:=	2;<br/>			End_If;<br/>	End_Case;<br/>(* End_ move Commissioning block to Lumgate Controll *)<br/>
									<br/>If xReadConfigFiles then<br/>	iGeneralControl	:=	0;<br/>End_if;<br/>
									<br/>Case iGeneralControl Of<br/>	0:<br/>		strDiag					:=	'Reading configuration files...';<br/>		xStartupProcessDone		:=	False;<br/>	<br/>		(* Reset detected file states *)<br/>		xChangedNetFileExist		:=	False;<br/>		xNetworkConfigFileExist		:=	False;<br/>		xChangedLumgateFileExist	:=	False;<br/>		xLumgateConfigFileExist		:=	False;<br/>		xChangedL20FileExist		:=	False;<br/>		xL20ConfigFileExist			:=	False;<br/>		xChangedThreshold1FileExist	:=	False;<br/>		xThreshold1ConfigFileExist	:=	False;<br/>		xChangedThreshold2FileExist	:=	False;<br/>		xThreshold2ConfigFileExist	:=	False;<br/>		xChangedThreshold3FileExist	:=	False;<br/>		xThreshold3ConfigFileExist	:=	False;<br/>		xChangedThreshold4FileExist	:=	False;<br/>		xThreshold4ConfigFileExist	:=	False;<br/>
									<br/>		(* Trigger file reading *)<br/>		xReadNetworkConfig_1	:=	True;<br/>		xReadNetworkConfig		:=	True;<br/>		xReadLumgateConfig_1	:=	True;<br/>		xReadLumgateConfig		:=	True;<br/>		xDetectLumgateFormat	:=	True;<br/>		xReadSensorConfig_1		:=	True;<br/>		xReadSensorConfig		:=	True;<br/>		xReadThresholdConfig1_1	:=	True;<br/>		xReadThresholdConfig1	:=	True;<br/>		xReadThresholdConfig2_1	:=	True;<br/>		xReadThresholdConfig2	:=	True;<br/>		xReadThresholdConfig3_1	:=	True;<br/>		xReadThresholdConfig3	:=	True;<br/>		xReadThresholdConfig4_1	:=	True;<br/>		xReadThresholdConfig4	:=	True;<br/>		arrSegment[1]	:=	0;<br/>		arrSegment[2]	:=	0;<br/>		arrSegment[3]	:=	0;<br/>		arrSegment[4]	:=	0;<br/>
									<br/>		(* V2.01 Changes *)<br/>		udtLevelConfiguration_L20_1.diAverageTime	:=	diAverageTime;<br/>		udtLevelConfiguration_L20_1.iHysteric		:=	iHysteresis;<br/>		udtLevelConfiguration_L20_1.strName1		:=	strConfigurationName1_1;<br/>		udtLevelConfiguration_L20_1.strName2		:=	strConfigurationName1_2;<br/>		udtLevelConfiguration_L20_1.strName3		:=	strConfigurationName1_3;<br/>		udtLevelConfiguration_L20_1.strName4		:=	strConfigurationName1_4;<br/>		udtLevelConfiguration_L20_2.strName1		:=	strConfigurationName2_1;<br/>		udtLevelConfiguration_L20_2.strName2		:=	strConfigurationName2_2;<br/>		udtLevelConfiguration_L20_2.strName3		:=	strConfigurationName2_3;<br/>		udtLevelConfiguration_L20_2.strName4		:=	strConfigurationName2_4;<br/>		udtLevelConfiguration_L20_3.strName1		:=	strConfigurationName3_1;<br/>		udtLevelConfiguration_L20_3.strName2		:=	strConfigurationName3_2;<br/>		udtLevelConfiguration_L20_3.strName3		:=	strConfigurationName3_3;<br/>		udtLevelConfiguration_L20_3.strName4		:=	strConfigurationName3_4;<br/>		udtLevelConfiguration_L20_4.strName1		:=	strConfigurationName4_1;<br/>		udtLevelConfiguration_L20_4.strName2		:=	strConfigurationName4_2;<br/>		udtLevelConfiguration_L20_4.strName3		:=	strConfigurationName4_3;<br/>		udtLevelConfiguration_L20_4.strName4		:=	strConfigurationName4_4;<br/>		udtLevelConfiguration_L20_1.xActiveConfig1	:=	xActiveConfig1_1;<br/>		udtLevelConfiguration_L20_1.xActiveConfig2	:=	xActiveConfig1_2;<br/>		udtLevelConfiguration_L20_1.xActiveConfig3	:=	xActiveConfig1_3;<br/>		udtLevelConfiguration_L20_1.xActiveConfig4	:=	xActiveConfig1_4;<br/>		udtLevelConfiguration_L20_2.xActiveConfig1	:=	xActiveConfig2_1;<br/>		udtLevelConfiguration_L20_2.xActiveConfig2	:=	xActiveConfig2_2;<br/>		udtLevelConfiguration_L20_2.xActiveConfig3	:=	xActiveConfig2_3;<br/>		udtLevelConfiguration_L20_2.xActiveConfig4	:=	xActiveConfig2_4;<br/>		udtLevelConfiguration_L20_3.xActiveConfig1	:=	xActiveConfig3_1;<br/>		udtLevelConfiguration_L20_3.xActiveConfig2	:=	xActiveConfig3_2;<br/>		udtLevelConfiguration_L20_3.xActiveConfig3	:=	xActiveConfig3_3;<br/>		udtLevelConfiguration_L20_3.xActiveConfig4	:=	xActiveConfig3_4;<br/>		udtLevelConfiguration_L20_4.xActiveConfig1	:=	xActiveConfig4_1;<br/>		udtLevelConfiguration_L20_4.xActiveConfig2	:=	xActiveConfig4_2;<br/>		udtLevelConfiguration_L20_4.xActiveConfig3	:=	xActiveConfig4_3;<br/>		udtLevelConfiguration_L20_4.xActiveConfig4	:=	xActiveConfig4_4;<br/>
									<br/>		For iLoop := 1 To 240 do<br/>			arrLumgates[iLoop].xInConfigFile	:=	False;<br/>		End_For;<br/>
									<br/>		iGeneralControl			:=	1;<br/>
									<br/>	1:<br/>		strDiag					:=	'This process needs up to 2 minutes.';<br/>		iGeneralControl			:=	2;<br/>	<br/>	2:<br/>		If not xReadThresholdConfig4 then (* Last file, everything done *)<br/>			strDiag				:=	'Reading configuration done.';<br/>			xRequestStartupIB	:=	True;<br/>			xStartupProcessDone	:=	True;<br/>			xIBConfigSaved		:=	True;<br/>
									<br/>			iGeneralControl		:=	3;<br/>		End_If;<br/>
									<br/>	3:<br/>		If xActivateOutputData then		(* Interbus startup routine finished *)<br/>			For iLoop := 1 to 240 do	(* Copy retain data to Lumgate structure *)<br/>				arrLumgates[iLoop].arrPowerConsumption					:=	arrLumgateCurrentConsumption[iLoop];<br/>				(* V2.01 Changes *) <br/>				arrLumgates[iLoop].arrPowerConsumption_01				:=	arrLGCurrentConsumption_01[iLoop];<br/>				arrLumgates[iLoop].arrPowerConsumption_10				:=	arrLGCurrentConsumption_10[iLoop];<br/>				arrLumgates[iLoop].arrPowerConsumption_11				:=	arrLGCurrentConsumption_11[iLoop];<br/>				arrLumgates[iLoop].udtInternal.xPowerConsumptionCorrect	:=	True;<br/>
									<br/>				(* There is no minimum difference measured *)<br/>				If arrLumgates[iLoop].arrPowerConsumption[23] &lt;= arrLumgates[iLoop].arrPowerConsumption[12] then <br/>					arrLumgates[iLoop].udtInternal.xPowerConsumptionCorrect	:= 	False;<br/>				End_If;<br/>
									<br/>				(* There is no minimum difference measured *)<br/>				If arrLumgates[iLoop].arrPowerConsumption[12] &lt;= arrLumgates[iLoop].arrPowerConsumption[2] then <br/>					arrLumgates[iLoop].udtInternal.xPowerConsumptionCorrect	:= 	False;<br/>				End_If;<br/>			End_For;<br/>			iGeneralControl	:=	4;<br/>		End_If;<br/>
									<br/>	4:	<br/>		iGeneralControl	:=	5;			(* Restore hour counters *)<br/>
									<br/>		For iLoop := 1 to 240 do		(* Copy retain data to Lumgate structure *)<br/>			arrLumgates[iLoop].udtHourCounterGeneral		:=	arrHourCountersType1[iLoop];<br/>			arrLumgates[iLoop].udtHourCounterMaintenance	:=	arrHourCountersType2[iLoop];<br/>			arrLumgates[iLoop].udtHourCounter20_50			:=	arrHourCountersType3[iLoop];<br/>			arrLumgates[iLoop].udtHourCounter50_75			:=	arrHourCountersType4[iLoop];<br/>			arrLumgates[iLoop].udtHourCounter75_100			:=	arrHourCountersType5[iLoop];<br/>		End_For;<br/>	<br/>	5:<br/>		For iLoop := 1 to 240 do		(* Save hour counters *)<br/>			arrHourCountersType1[iLoop]	:=	arrLumgates[iLoop].udtHourCounterGeneral;<br/>			arrHourCountersType2[iLoop]	:=	arrLumgates[iLoop].udtHourCounterMaintenance;<br/>			arrHourCountersType3[iLoop]	:=	arrLumgates[iLoop].udtHourCounter20_50;<br/>			arrHourCountersType4[iLoop]	:=	arrLumgates[iLoop].udtHourCounter50_75;<br/>			arrHourCountersType5[iLoop]	:=	arrLumgates[iLoop].udtHourCounter75_100;<br/>		End_For;<br/>
									<br/>		(* V2.01 Changes *)<br/>		diAverageTime			:=	udtLevelConfiguration_L20_1.diAverageTime;<br/>		iHysteresis				:=	udtLevelConfiguration_L20_1.iHysteric;<br/>		strConfigurationName1_1	:=	udtLevelConfiguration_L20_1.strName1;<br/>		strConfigurationName1_2	:=	udtLevelConfiguration_L20_1.strName2;<br/>		strConfigurationName1_3	:=	udtLevelConfiguration_L20_1.strName3;<br/>		strConfigurationName1_4	:=	udtLevelConfiguration_L20_1.strName4;<br/>		strConfigurationName2_1	:=	udtLevelConfiguration_L20_2.strName1;<br/>		strConfigurationName2_2	:=	udtLevelConfiguration_L20_2.strName2;<br/>		strConfigurationName2_3	:=	udtLevelConfiguration_L20_2.strName3;<br/>		strConfigurationName2_4	:=	udtLevelConfiguration_L20_2.strName4;<br/>		strConfigurationName3_1	:=	udtLevelConfiguration_L20_3.strName1;<br/>		strConfigurationName3_2	:=	udtLevelConfiguration_L20_3.strName2;<br/>		strConfigurationName3_3	:=	udtLevelConfiguration_L20_3.strName3;<br/>		strConfigurationName3_4	:=	udtLevelConfiguration_L20_3.strName4;<br/>		strConfigurationName4_1	:=	udtLevelConfiguration_L20_4.strName1;<br/>		strConfigurationName4_2	:=	udtLevelConfiguration_L20_4.strName2;<br/>		strConfigurationName4_3	:=	udtLevelConfiguration_L20_4.strName3;<br/>		strConfigurationName4_4	:=	udtLevelConfiguration_L20_4.strName4;<br/>		xActiveConfig1_1		:=	udtLevelConfiguration_L20_1.xActiveConfig1;<br/>		xActiveConfig1_2		:=	udtLevelConfiguration_L20_1.xActiveConfig2;<br/>		xActiveConfig1_3		:=	udtLevelConfiguration_L20_1.xActiveConfig3;<br/>		xActiveConfig1_4		:=	udtLevelConfiguration_L20_1.xActiveConfig4;<br/>		xActiveConfig2_1		:=	udtLevelConfiguration_L20_2.xActiveConfig1;<br/>		xActiveConfig2_2		:=	udtLevelConfiguration_L20_2.xActiveConfig2;<br/>		xActiveConfig2_3		:=	udtLevelConfiguration_L20_2.xActiveConfig3;<br/>		xActiveConfig2_4		:=	udtLevelConfiguration_L20_2.xActiveConfig4;<br/>		xActiveConfig3_1		:=	udtLevelConfiguration_L20_3.xActiveConfig1;<br/>		xActiveConfig3_2		:=	udtLevelConfiguration_L20_3.xActiveConfig2;<br/>		xActiveConfig3_3		:=	udtLevelConfiguration_L20_3.xActiveConfig3;<br/>		xActiveConfig3_4		:=	udtLevelConfiguration_L20_3.xActiveConfig4;<br/>		xActiveConfig4_1		:=	udtLevelConfiguration_L20_4.xActiveConfig1;<br/>		xActiveConfig4_2		:=	udtLevelConfiguration_L20_4.xActiveConfig2;<br/>		xActiveConfig4_3		:=	udtLevelConfiguration_L20_4.xActiveConfig3;<br/>		xActiveConfig4_4		:=	udtLevelConfiguration_L20_4.xActiveConfig4;<br/>
									<br/>		If xWriteCurrent then<br/>			For iLoop := 1 to 240 do	(* Save measured current *)<br/>				arrLumgateCurrentConsumption[iLoop]	:=	arrLumgates[iLoop].arrPowerConsumption;<br/>				(* V2.01 Changes *)<br/>				arrLGCurrentConsumption_01[iLoop]	:=	arrLumgates[iLoop].arrPowerConsumption_01;<br/>				arrLGCurrentConsumption_10[iLoop]	:=	arrLumgates[iLoop].arrPowerConsumption_10;<br/>				arrLGCurrentConsumption_11[iLoop]	:=	arrLumgates[iLoop].arrPowerConsumption_11;<br/>			End_For;<br/>		End_if;<br/>End_Case;<br/>
								</p>
							</html>
						</worksheet>
						<worksheet name="LineAnalyzer">
							<html xmlns="http://www.w3.org/1999/xhtml">
								<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">(* FB_FileHandling / Line Analyzer *)<br/>Case iLineAnalyzer Of<br/>	0:<br/>		If xReadNetworkConfig_1 then<br/>			udtFileHandler.strFileNameSource	:=	'ATS_Network_Configuration_1.csv';(* At first try to read modyfied files *)<br/>			udtFileHandler.udiReadPosition	:=	Udint#0;	(* Reset file position pointer *)					(* | *)<br/>			iPositionCounter				:=	0;																(* | *)<br/>			iType							:=	1;			(* Define file type *)								(* | *)<br/>			iLineAnalyzer					:=	10;																(* | *)<br/>			xChangedFile					:=	True;		(* trigger for file modifications *)				(* | *)<br/>		Elsif xReadNetworkConfig then																			(* V *)<br/>			udtFileHandler.strFileNameSource	:=	'ATS_Network_Configuration.csv';(* Then, in case of no modifyed file exist, *)<br/>			udtFileHandler.udiReadPosition	:=	Udint#0;							(* search for the original file             *)<br/>			iPositionCounter				:=	0;<br/>			iType							:=	1;<br/>			iLineAnalyzer					:=	10;<br/>		Elsif xReadLumgateConfig_1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Lumgate_Configuration_1.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 2;<br/>			iLineAnalyzer					:= 10;<br/>			xChangedFile					:=	True;<br/>		Elsif xReadLumgateConfig then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Lumgate_Configuration.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 2;<br/>			iLineAnalyzer					:= 10;<br/>		Elsif xReadSensorConfig_1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_L20_Configuration_1.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 3;<br/>			iLineAnalyzer					:= 10;<br/>			xChangedFile					:=	True;<br/>		Elsif xReadSensorConfig then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_L20_Configuration.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 3;<br/>			iLineAnalyzer					:= 10;<br/>		Elsif xReadThresholdConfig1_1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_1_Configuration_1.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 4;<br/>			iLineAnalyzer					:= 10;<br/>			xChangedFile					:=	True;<br/>		Elsif xReadThresholdConfig1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_1_Configuration.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 4;<br/>			iLineAnalyzer					:= 10;<br/>		Elsif xReadThresholdConfig2_1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_2_Configuration_1.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 5;<br/>			iLineAnalyzer					:= 10;<br/>			xChangedFile					:=	True;<br/>		Elsif xReadThresholdConfig2 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_2_Configuration.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 5;<br/>			iLineAnalyzer					:= 10;<br/>		Elsif xReadThresholdConfig3_1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_3_Configuration_1.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 6;<br/>			iLineAnalyzer					:= 10;<br/>			xChangedFile					:=	True;<br/>		Elsif xReadThresholdConfig3 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_3_Configuration.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 6;<br/>			iLineAnalyzer					:= 10;<br/>		Elsif xReadThresholdConfig4_1 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_4_Configuration_1.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 7;<br/>			iLineAnalyzer					:= 10;<br/>			xChangedFile					:=	True;<br/>		Elsif xReadThresholdConfig4 then<br/>			udtFileHandler.strFileNameSource	:= 'ATS_Threshold_4_Configuration.csv';<br/>			udtFileHandler.udiReadPosition	:= Udint#0;<br/>			iPositionCounter				:= 0;<br/>			iType							:= 7;<br/>			iLineAnalyzer					:= 10;<br/>		Elsif xWriteLumgateConfig then<br/>			xRequestWritingLumgateConfig	:= True;<br/>			iLineAnalyzer					:= 20;	(* Block read trigger during writing process *)<br/>		End_If;<br/>		<br/>	10:<br/>		If not udtFileHandler.xRequest then<br/>			udtFileHandler.xRequest		:=	True;<br/>			udtFileHandler.iTasktype	:=	3; (* Read data *)<br/>			iLineAnalyzer				:=	11;<br/>		End_If;<br/>
									<br/>	11:<br/>		If xWaitFileHandling then (* Reading from flash is ready *)<br/>			If udtFileHandler.udiReadPosition &gt; Udint#0 then (* File exists and contains data *)<br/>				xReadLines		:= True;<br/>				iLineAnalyzer	:= 12;<br/>				(* Display detected files *)<br/>				If iType = 1 then		(* Network config *)<br/>					If xChangedFile then<br/>						xChangedNetFileExist	:=	True;<br/>						xNetworkConfigFileExist	:=	False;<br/>					Else<br/>						xNetworkConfigFileExist	:=	True;<br/>						xChangedNetFileExist	:=	False;<br/>					End_if;<br/>				Elsif iType = 2 then	(* Lumgate config *)<br/>					If xChangedFile then<br/>						xChangedLumgateFileExist:=	True;<br/>						xAlarm					:=	False;	(* Senseless without Lumgate config *)<br/>						xLumgateConfigFileExist	:=	False;<br/>					Else<br/>						xLumgateConfigFileExist	:=	True;<br/>						xAlarm					:=	False;<br/>						xChangedLumgateFileExist:=	False;<br/>					End_if;<br/>				Elsif iType = 3 then	(* Sensor config *)<br/>					If xChangedFile then<br/>						xChangedL20FileExist	:=	True;<br/>						xL20ConfigFileExist		:=	False;<br/>					Else<br/>						xL20ConfigFileExist		:=	True;<br/>						xChangedL20FileExist	:=	False;<br/>					End_if;<br/>				Elsif iType = 4 then	(* Threshold table 1 *)<br/>					If xChangedFile then<br/>						xChangedThreshold1FileExist	:=	True;<br/>						xThreshold1ConfigFileExist	:=	False;<br/>					Else<br/>						xThreshold1ConfigFileExist	:=	True;<br/>						xChangedThreshold1FileExist	:=	False;<br/>					End_if;<br/>				Elsif iType = 5 then	(* Threshold table 2 *)<br/>					If xChangedFile then<br/>						xChangedThreshold2FileExist	:=	True;<br/>						xThreshold2ConfigFileExist	:=	False;<br/>					Else<br/>						xThreshold2ConfigFileExist	:=	True;<br/>						xChangedThreshold2FileExist	:=	False;<br/>					End_if;<br/>				Elsif iType = 6 then	(* Threshold table 3 *)<br/>					If xChangedFile then<br/>						xChangedThreshold3FileExist	:=	True;<br/>						xThreshold3ConfigFileExist	:=	False;<br/>					Else<br/>						xThreshold3ConfigFileExist	:=	True;<br/>						xChangedThreshold3FileExist	:=	False;<br/>					End_if;<br/>				Elsif iType = 7 then	(* Threshold table 4 *)<br/>					If xChangedFile then<br/>						xChangedThreshold4FileExist	:=	True;<br/>						xThreshold4ConfigFileExist	:=	False;<br/>					Else<br/>						xThreshold4ConfigFileExist	:=	True;<br/>						xChangedThreshold4FileExist	:=	False;<br/>					End_if;<br/>				End_if;<br/>			Elsif udtFileHandler.udiReadPosition = Udint#0 and xChangedFile then <br/>			(* Modifyed file does not exist, try original file *)<br/>				iLineAnalyzer	:= 30;<br/>			Elsif udtFileHandler.udiReadPosition = Udint#0 then <br/>			(* Original file does also not exist *)<br/>				iLineAnalyzer	:= 13;<br/>				If iType = 1 then<br/>					xNetworkConfigFileExist		:=	False;<br/>				Elsif iType = 2 then<br/>					xLumgateConfigFileExist		:=	False;<br/>				Elsif iType = 3 then<br/>					xL20ConfigFileExist			:=	False;<br/>				Elsif iType = 4 then<br/>					xThreshold1ConfigFileExist	:=	False;<br/>				Elsif iType = 5 then<br/>					xThreshold2ConfigFileExist	:=	False;<br/>				Elsif iType = 6 then<br/>					xThreshold3ConfigFileExist	:=	False;<br/>				Elsif iType = 7 then<br/>					xThreshold4ConfigFileExist	:=	False;<br/>				End_if;<br/>			End_If;<br/>		End_If;<br/>
									<br/>	12:<br/>		If not xWaitFileHandling then<br/>			If xEnd then	(* Reading file done *)<br/>				xEnd	:=	False;<br/>
									<br/>				(* reset "read file trigger" *)<br/>				Case iType of<br/>					1:	xReadNetworkConfig		:=	False;<br/>						xReadNetworkConfig_1	:=	False;<br/>					2:	xReadLumgateConfig		:=	False;<br/>						xReadLumgateConfig_1	:=	False;<br/>					3:	xReadSensorConfig		:=	False;<br/>						xReadSensorConfig_1		:=	False;<br/>					4:	xReadThresholdConfig1	:=	False;<br/>						xReadThresholdConfig1_1	:=	False;<br/>					5:	xReadThresholdConfig2	:=	False;<br/>						xReadThresholdConfig2_1	:=	False;<br/>					6:	xReadThresholdConfig3	:=	False;<br/>						xReadThresholdConfig3_1	:=	False;<br/>					7:	xReadThresholdConfig4	:=	False;<br/>						xReadThresholdConfig4_1	:=	False;<br/>				End_Case;<br/>
									<br/>				iLineAnalyzer	:=	0;<br/>			Else<br/>				iLineAnalyzer	:=	10;<br/>			End_If;<br/>		End_If;<br/>
									<br/>	13:<br/>		xWaitFileHandling	:=	False;<br/>
									<br/>		Case iType Of<br/>
									<br/>			1:	strDiag					:=	'Network configuration file not found';<br/>				xReadNetworkConfig		:=	False;<br/>
									<br/>			2:	strDiag					:=	'Lumgate configuration file not found';<br/>				xAlarm					:=	True;	(* ATS without a Lumgate configuration is useless *)<br/>				xReadLumgateConfig		:=	False;<br/>
									<br/>			3:	strDiag					:=	'Sensor configuration file not found';<br/>				xReadSensorConfig		:=	False;<br/>
									<br/>			4:	strDiag					:=	'Threshold configuration file 1 not found';<br/>				xReadThresholdConfig1	:=	False;<br/>
									<br/>			5:	strDiag					:=	'Threshold configuration file 2 not found';<br/>				xReadThresholdConfig2	:=	False;<br/>
									<br/>			6:	strDiag					:=	'Threshold configuration file 3 not found';<br/>				xReadThresholdConfig3	:=	False;<br/>
									<br/>			7:	strDiag					:=	'Threshold configuration file 4 not found';<br/>				xReadThresholdConfig4	:=	False;<br/>		End_Case;<br/>		iLineAnalyzer:= 0;<br/>
									<br/>	20:<br/>		If not xRequestWritingLumgateConfig then<br/>			iLineAnalyzer				:=	0;<br/>		End_If;<br/>
									<br/>	30:<br/>		xChangedFile					:=	False;<br/>		(* reset "read file trigger" *)<br/>		Case iType of<br/>			1:	xReadNetworkConfig_1	:= False;<br/>			2:	xReadLumgateConfig_1	:= False;<br/>			3:	xReadSensorConfig_1		:= False;<br/>			4:	xReadThresholdConfig1_1	:= False;<br/>			5:	xReadThresholdConfig2_1	:= False;<br/>			6:	xReadThresholdConfig3_1	:= False;<br/>			7:	xReadThresholdConfig4_1	:= False;<br/>		End_Case;<br/>
									<br/>		xWaitFileHandling				:=	False;<br/>		If not udtFileHandler.xRequest then<br/>			iLineAnalyzer				:=	31;<br/>		End_If;<br/>
									<br/>	31:	(* Back to read next file *)<br/>		udtFileHandler.xRequest				:= True;<br/>		udtFileHandler.strFileNameTarget	:= udtFileHandler.strFileNameSource;<br/>		udtFileHandler.iTasktype			:= 2;<br/>		iLineAnalyzer						:= 32;<br/>
									<br/>	32:<br/>		If not udtFileHandler.xRequest then<br/>			iLineAnalyzer					:= 0;<br/>		End_If;<br/>
									<br/>(*	33:<br/>		udtFileHandler.strFileNameSource	:= 'ATS_Lumgate_Configuration.csv'; <br/>		xReadThresholdConfig4				:=	False;<br/>		udtFileHandler.udiReadPosition		:= Udint#0;<br/>		iType								:= 2;<br/>		iLineAnalyzer						:= 10; *)<br/>End_Case;<br/>
									<br/>Case iFindLines of	(* Searching for contnt *)<br/>	0:<br/>		If xReadLines then<br/>			iBeginPosition	:= 0;<br/>			iFindLines		:= 1;<br/>		End_If;<br/>
									<br/>	1:	(* read file *)<br/>		xCRFound			:= False;<br/>		xEmptyPositionFound	:= False;<br/>		For iLoop := iBeginPosition to 5000 do<br/>			If arrFBuffer[iLoop] = Byte#16#0D then<br/>				iEndPosition	:= iLoop - 1;<br/>				xCRFound		:= True;<br/>				Exit;<br/>			Elsif arrFBuffer[iLoop] = Byte#0 then<br/>				iEndPosition		:= iLoop - 1;<br/>				xEmptyPositionFound	:= True;<br/>				Exit;<br/>			End_If;<br/>		End_For;<br/>		If xCRFound then (* Carriage return *)<br/>			iFindLines		:= 2;<br/>		Elsif xEmptyPositionFound then<br/>			xEnd			:= True;<br/>			iFindLines		:= 2;<br/>		Else<br/>			iPositionCounter				:= iPositionCounter + iBeginPosition;<br/>			udtFileHandler.udiReadPosition	:= Int_To_Udint(iPositionCounter);<br/>			xWaitFileHandling				:= False;<br/>			xReadLines						:= False;<br/>			iFindLines						:= 5;<br/>		End_If;<br/>
									<br/>	2:<br/>		diTranslateCount			:= Int_To_Dint(iEndPosition - iBeginPosition + 1);<br/>		diTranslateOffset			:= Int_To_Dint(iBeginPosition);<br/>		xTranslateRequest			:= True;<br/>		iFindLines					:= 3;<br/>
									<br/>	3:<br/>		If xTranslateDone then<br/>			xLineReady				:= True;<br/>			iFindLines				:= 4;<br/>		End_If;<br/>
									<br/>	4:<br/>		If not xLineReady then<br/>			iBeginPosition			:= iEndPosition + 3;<br/>			xTranslateRequest		:= False;<br/>			iFindLines				:= 1;<br/>
									<br/>			If xEnd then	(* End, next file *)<br/>				xReadLines			:= False;<br/>				xWaitFileHandling	:= False;<br/>				iLine				:= 0;<br/>				iFindLines			:= 0;<br/>			End_If;<br/>		End_If;<br/>
									<br/>	5:<br/>		If xReadLines then<br/>			iBeginPosition			:= 0;<br/>			iFindLines				:= 1;<br/>		End_If;<br/>End_Case;<br/>
									<br/>Case iReadConfiguration of<br/>	0:<br/>		If xLineReady then<br/>			iReadConfiguration	:= 10;<br/>		End_If;<br/>
									<br/>	2:<br/>		xLineReady				:= False;<br/>		iReadConfiguration		:= 0;<br/>
									<br/>	10:<br/>		xEmptyLine				:= False;<br/>		xIgnoreLine				:= False;<br/>		If len(strLineData) = 0 then<br/>			xEmptyLine			:= True;<br/>		End_If;<br/>		If not xEmptyLine then	(* Ignore comments signed with "*" *)<br/>			strFirstCharacter	:= Left(strLineData,1);<br/>			xIgnoreLine			:= EQ_String(strFirstCharacter,'*');<br/>		End_If;<br/>
									<br/>		If not xEmptyLine and not xIgnoreLine then<br/>			Case iType of<br/>			1:	iReadConfiguration	:= 11; (* Network configuration *)<br/>			2:	iReadConfiguration	:= 12; (* Lumgate configuration *)<br/>				For iLoop := 1 to 209 do<br/>					arrTempText[iLoop]	:=	'';<br/>				End_For;<br/>			3:	iReadConfiguration	:= 13; (* L20 configuration *)<br/>			4:	iReadConfiguration	:= 14; (* Threshold configuration 1 *)<br/>			5:	iReadConfiguration	:= 15; (* Threshold configuration 2 *)<br/>			6:	iReadConfiguration	:= 16; (* Threshold configuration 3 *)<br/>			7:	iReadConfiguration	:= 17; (* Threshold configuration 4 *)<br/>			End_Case;		<br/>		Else<br/>			xLineReady				:=	False;<br/>			iReadConfiguration		:=	0;<br/>		End_If;<br/>		<br/>	11:	(* Network configuration *)<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 14.29;<br/>
									<br/>		Case iLine of<br/>		1:<br/>			(* Check plausibility...<br/>			Task for next version...	e.g. :=	find(strLineData,'IP: '); *)<br/>				udtNetworkConfiguration.strIP		:=	Delete(strLineData,4,1);<br/>				rLoadMaker							:=	14.29;<br/>				strLoadText							:=	'Network configuration...';<br/>		2:		udtNetworkConfiguration.strSubnet	:=	Delete(strLineData,8,1);<br/>		3:		udtNetworkConfiguration.strGateway	:=	Delete(strLineData,9,1);<br/>		4:		udtNetworkConfiguration.strIPModbus	:=	Delete(strLineData,11,1);<br/>				xExecuteIP_Translate				:=	True;	(* start string to arr_of_byte translation *)<br/>		5:		strTemp								:=	Right(strLineData,1);<br/>				udtNetworkConfiguration.iMode		:=	String_To_Int(strTemp);<br/>		6:		udtNetworkConfiguration.strDNS		:=	Delete(strLineData,10,1);<br/>		7:		strTemp								:=	Delete(strLineData,14,1);<br/>				udtNetworkConfiguration.xLumgateType	:=	int_to_bool(string_to_int(strTemp));<br/>
									<br/>				rLoadMaker							:=	100.0;<br/>		End_Case;<br/>
									<br/>		xLineReady			:= False;<br/>		iReadConfiguration	:= 0;<br/>
									<br/>		(* Safe data to recognize changes *)<br/>		udtActNetworkConfiguration	:=	udtNetworkConfiguration;<br/>
									<br/>	12:	(* Lumgate configuration *)<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 0.41;<br/>		<br/>		(*	V2.01 changes: Detect file format EPO-IS-268-917 *)<br/>		If eq_string(strLineData,'File format version;2') and xDetectLumgateFormat then<br/>			rLoadMaker				:=	0.41;<br/>			strLoadText				:=	'Lumgate configuration...';<br/>			xIgnoreLine				:=	True;<br/>			iFileFormat				:=	2;<br/>			xDetectLumgateFormat	:=	False;<br/>		Elsif xDetectLumgateFormat then<br/>			rLoadMaker				:=	0.41;<br/>			strLoadText				:=	'Lumgate configuration...';<br/>			iFileFormat				:=	0;<br/>			xDetectLumgateFormat	:=	False;<br/>		End_if;<br/>
									<br/>		(*	V2.01 changes: New file format, include relay states EPO-IS-268-917 *)<br/>		If iFileFormat = 2 and not xIgnoreLine then<br/>			iElement	:=	0;<br/>
									<br/>			For iLoop := 1 to 209 do	(* Fill string array with Lumgate information *)<br/>				iPositionSeparator1	:= Find(strLineData,';');<br/>				iPositionSeparator2	:= Find(strLineData,'&amp;');	(* Seperatior between scenes and special scenes *)<br/>				iLength				:= Len(strLineData);<br/>
									<br/>				If iLength &gt; 0 and (iPositionSeparator1 &lt; iPositionSeparator2 or iPositionSeparator2 = 0) then<br/>					If not xShiftToSpecial then<br/>						iElement		:= iElement + 1;<br/>					Else<br/>						iElement		:= 165;	(* start storring special scenes *)<br/>						xShiftToSpecial	:= False;<br/>					End_If;<br/>
									<br/>					iNumber				:= iPositionSeparator1 - 1;<br/>					If iNumber &gt; 0 then<br/>						arrTempText[iElement]	:= Left(strLineData,iNumber);<br/>						strLineData				:= Delete(strLineData,iPositionSeparator1,1);<br/>					Else<br/>						arrTempText[iElement]	:= strLineData;	(* fill Lumgate data structure *)<br/>						strLineData				:= '';<br/>					End_If;<br/>
									<br/>				Elsif iLength &gt; 0 and iPositionSeparator1 &gt; iPositionSeparator2 then<br/>					iElement				:= iElement + 1;<br/>					iNumber					:= iPositionSeparator2 - 1;<br/>					arrTempText[iElement]	:= Left(strLineData,iNumber);<br/>					strLineData				:= Delete(strLineData,iPositionSeparator2,1);<br/>					xShiftToSpecial			:= True;<br/>	<br/>				Elsif iLength &gt; 0 and iPositionSeparator1 = 0 and iPositionSeparator2 = 0 then<br/>					iElement				:= iElement + 1;<br/>					arrTempText[iElement]	:= strLineData;<br/>
									<br/>				Elsif iPositionSeparator1 = 0 and iPositionSeparator2 = 0 then<br/>					iElement				:= 0;<br/>					Exit;<br/>				End_If;<br/>			End_For;<br/>
									<br/>			If ((len(arrTempText[2]) &gt; 50) or (len(arrTempText[2]) = 0)) then<br/>				(* In case of no comment, the complete dataset is not readable *)<br/>				arrTempText[2]	:=	'not available'; (* command field *)<br/>			End_if;<br/>
									<br/>			If (iLine &gt; 0) and (iLine &lt; 241) then	(* copy string array to Lumgate structure *)<br/>				arrLumgates[iLine].xInConfigFile:= True;	(* Lumgate in config file detected *)<br/>				iLength							:= Len(arrTempText[1]);<br/>				iLength							:= iLength - 2;<br/>				strTemp							:= Left(arrTempText[1],1);<br/>				arrLumgates[iLine].iModuleLevel	:= String_to_Int(strTemp);	(* Split address "X-YYY" into segment and module number *)<br/>				arrLumgates[iLine].iModuleLevel	:= arrLumgates[iLine].iModuleLevel - 1;<br/>
									<br/>				If iLength &gt; 0 then	<br/>			(* count configured Lumgates per segment to compare the configured and the real connected Lumgates *)<br/>					If arrLumgates[iLine].iModuleLevel = 0 then<br/>						arrSegment[1]	:=	arrSegment[1] + 1;<br/>					Elsif arrLumgates[iLine].iModuleLevel = 1 then<br/>						arrSegment[2]	:=	arrSegment[2] + 1;<br/>					Elsif arrLumgates[iLine].iModuleLevel = 2 then<br/>						arrSegment[3]	:=	arrSegment[3] + 1;<br/>					Elsif arrLumgates[iLine].iModuleLevel = 3 then<br/>						arrSegment[4]	:=	arrSegment[4] + 1;<br/>					End_if;<br/>					strTemp								:= Right(arrTempText[1],iLength);<br/>					arrLumgates[iLine].iModuleNumber	:= String_to_Int(strTemp);<br/>				End_If;<br/>
									<br/>				arrLumgates[iLine].strDescription:= arrTempText[2];<br/>				If EQ_String(arrTempText[3],'1') then<br/>					arrLumgates[iLine].xFailMode		:= True;<br/>				Else<br/>					arrLumgates[iLine].xFailMode		:= False;<br/>				End_If;<br/>				arrLumgates[iLine].iOutputLevelFailsave	:= String_To_Int(arrTempText[4]);<br/>				If EQ_String(arrTempText[5],'1') then<br/>					arrLumgates[iLine].xFailsaveRelay1		:= True;<br/>				Else<br/>					arrLumgates[iLine].xFailsaveRelay1		:= False;<br/>				End_If;<br/>				If EQ_String(arrTempText[6],'1') then<br/>					arrLumgates[iLine].xFailsaveRelay2		:= True;<br/>				Else<br/>					arrLumgates[iLine].xFailsaveRelay2		:= False;<br/>				End_If;<br/>				If EQ_String(arrTempText[7],'1') then<br/>					arrLumgates[iLine].xRelay1_NC 		:= True;<br/>				Else<br/>					arrLumgates[iLine].xRelay1_NC		:= False;<br/>				End_If;<br/>				If EQ_String(arrTempText[8],'1') then<br/>					arrLumgates[iLine].xRelay2_NC		:= True;<br/>				Else<br/>					arrLumgates[iLine].xRelay2_NC		:= False;<br/>				End_If;<br/>				arrLumgates[iLine].udtCloLed.udiHours	:= String_To_Udint(arrTempText[9]);<br/>				arrLumgates[iLine].udtCloLed.rPercentage:= String_To_Real(arrTempText[10]);<br/>				(* activate clo in case of existing data ( &gt; 0 ) *)<br/>				arrLumgates[iLine].udtCloLed.xActive	:= arrLumgates[iLine].udtCloLed.udiHours &gt; Udint#0 &amp; arrLumgates[iLine].udtCloLed.rPercentage &gt; 0.0;<br/>
									<br/>				arrLumgates[iLine].udtCloMaintenance.udiHours		:= String_To_Udint(arrTempText[11]);<br/>				arrLumgates[iLine].udtCloMaintenance.rPercentage	:= String_To_Real(arrTempText[12]);<br/>				(* activate maintenance factor in case of existing data ( &gt; 0 ) *)<br/>				arrLumgates[iLine].udtCloMaintenance.xActive		:= arrLumgates[iLine].udtCloMaintenance.udiHours &gt; Udint#0 &amp; arrLumgates[iLine].udtCloMaintenance.rPercentage &gt; 0.0;<br/>
									<br/>				arrLumgates[iLine].udtCurrentCheck.rPercentageWarning			:= String_To_Real(arrTempText[13]);<br/>				arrLumgates[iLine].udtCurrentCheck.xActiveCurrentCheckWarning	:= arrLumgates[iLine].udtCurrentCheck.rPercentageWarning &gt; 0.0;<br/>				(* activate current warnings in case of existing data ( &gt; 0 ) *)<br/>
									<br/>				arrLumgates[iLine].udtCurrentCheck.rPercentageError				:= String_To_Real(arrTempText[14]);<br/>				arrLumgates[iLine].udtCurrentCheck.xActiveCurrentCheckError		:= arrLumgates[iLine].udtCurrentCheck.rPercentageError &gt; 0.0;<br/>				(* activate current alarms in case of existing data ( &gt; 0 ) *)<br/>
									<br/>				For iLoop := 15 to 164 do<br/>					If iLoop = 15 then<br/>						iPositionScene	:=	1;<br/>					Else<br/>						iPositionScene	:=	iPositionScene + 1;<br/>					End_if;<br/>					(* Activate scenes in case of existing data ( &gt; 0 ) *)<br/>					If EQ_String(arrTempText[iLoop],'X') Or EQ_String(arrTempText[iLoop],'') then<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].iValue		:= 0;<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].xUsed		:= False;<br/>						iLoop	:=	iLoop + 1;<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay1 		:= False;<br/>						iLoop	:=	iLoop + 1;<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay2 		:= False;<br/>					Else<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].iValue		:= String_To_Int(arrTempText[iLoop]);<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].xUsed		:= True;<br/>						iLoop	:=	iLoop + 1;<br/>						If EQ_String(arrTempText[iLoop],'1')then<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay1 		:= True;<br/>						Else<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay1 		:= False;<br/>						End_if;<br/>						iLoop	:=	iLoop + 1;<br/>						If EQ_String(arrTempText[iLoop],'1')then<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay2 		:= True;<br/>						Else<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay2 		:= False;<br/>						End_if;<br/>					End_If;<br/>				End_For;<br/>
									<br/>				For iLoop := 165 to 207 do<br/>					If iLoop = 165 then<br/>						iPositionScene	:=	1;<br/>					Else<br/>						iPositionScene	:=	iPositionScene + 1;<br/>					End_if;<br/>					(* Activate special scenes in case of existing data ( &gt; 0 ) *)<br/>					If EQ_String(arrTempText[iLoop],'X') Or EQ_String(arrTempText[iLoop],'') then<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].iValue		:= 0;<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].xUsed		:= False;<br/>						iLoop	:=	iLoop + 1;<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay1 		:= False;<br/>						iLoop	:=	iLoop + 1;<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay2 		:= False;<br/>					Else<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].iValue		:= String_To_Int(arrTempText[iLoop]);<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].xUsed		:= True;<br/>						iLoop	:=	iLoop + 1;<br/>						If EQ_String(arrTempText[iLoop],'1')then<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay1 		:= True;<br/>						Else<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay1 		:= False;<br/>						End_if;<br/>						iLoop	:=	iLoop + 1;<br/>						If EQ_String(arrTempText[iLoop],'1')then<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay2 		:= True;<br/>						Else<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay2 		:= False;<br/>						End_if;<br/>					End_If;<br/>				End_For;<br/>				(* Safe data to recognize changes *)<br/>				arrLumgateConfig[iLine].arrDimmingScene			:=	arrLumgates[iLine].arrDimmingScene;<br/>				arrLumgateConfig[iLine].arrSpecialScene			:=	arrLumgates[iLine].arrSpecialScene;<br/>				arrLumgateConfig[iLine].iOutputLevelFailsave	:=	arrLumgates[iLine].iOutputLevelFailsave;<br/>				arrLumgateConfig[iLine].strDescription 			:=	arrLumgates[iLine].strDescription;<br/>				arrLumgateConfig[iLine].udtCloLed 				:=	arrLumgates[iLine].udtCloLed;<br/>				arrLumgateConfig[iLine].udtCloMaintenance		:=	arrLumgates[iLine].udtCloMaintenance;<br/>				arrLumgateConfig[iLine].udtCurrentCheck			:=	arrLumgates[iLine].udtCurrentCheck;<br/>				arrLumgateConfig[iLine].xFailMode				:=	arrLumgates[iLine].xFailMode;<br/>				arrLumgateConfig[iLine].xFailsaveRelay1 		:=	arrLumgates[iLine].xFailsaveRelay1;<br/>				arrLumgateConfig[iLine].xFailsaveRelay2 		:=	arrLumgates[iLine].xFailsaveRelay2;<br/>				arrLumgateConfig[iLine].xRelay1_NC 				:=	arrLumgates[iLine].xRelay1_NC;<br/>				arrLumgateConfig[iLine].xRelay2_NC		 		:=	arrLumgates[iLine].xRelay2_NC;<br/>			Else<br/>				xAlarm	:=	True;<br/>				strDiag	:=	'Error: To many Lumgates configured';<br/>			End_if;<br/>		Elsif iFileFormat = 0 then<br/>			For iLoop := 1 to 75 do<br/>				arrTempText[iLoop]	:=	'';<br/>			End_For;<br/>			iElement	:=	0;<br/>
									<br/>			For iLoop := 1 to 75 do	(* Fill string array with Lumgate information *)<br/>				iPositionSeparator1	:= Find(strLineData,';');<br/>				iPositionSeparator2	:= Find(strLineData,'&amp;');	(* Seperatior between scenes and special scenes *)<br/>				iLength				:= Len(strLineData);<br/>
									<br/>				If iLength &gt; 0 and (iPositionSeparator1 &lt; iPositionSeparator2 or iPositionSeparator2 = 0) then<br/>					If not xShiftToSpecial then<br/>						iElement		:= iElement + 1;<br/>					Else<br/>						iElement		:= 61;	(* start storring special scenes *)<br/>						xShiftToSpecial	:= False;<br/>					End_If;<br/>
									<br/>					iNumber				:= iPositionSeparator1 - 1;<br/>					If iNumber &gt; 0 then<br/>						arrTempText[iElement]	:= Left(strLineData,iNumber);<br/>						strLineData				:= Delete(strLineData,iPositionSeparator1,1);<br/>					Else<br/>						arrTempText[iElement]	:= strLineData;	(* fill Lumgate data structure *)<br/>						strLineData				:= '';<br/>					End_If;<br/>
									<br/>				Elsif iLength &gt; 0 and iPositionSeparator1 &gt; iPositionSeparator2 then<br/>					iElement				:= iElement + 1;<br/>					iNumber					:= iPositionSeparator2 - 1;<br/>					arrTempText[iElement]	:= Left(strLineData,iNumber);<br/>					strLineData				:= Delete(strLineData,iPositionSeparator2,1);<br/>					xShiftToSpecial			:= True;<br/>	<br/>				Elsif iLength &gt; 0 and iPositionSeparator1 = 0 and iPositionSeparator2 = 0 then<br/>					iElement				:= iElement + 1;<br/>					arrTempText[iElement]	:= strLineData;<br/>
									<br/>				Elsif iPositionSeparator1 = 0 and iPositionSeparator2 = 0 then<br/>					iElement				:= 0;<br/>					Exit;<br/>				End_If;<br/>				If ((len(arrTempText[2]) &gt; 50) or (len(arrTempText[2]) = 0)) then<br/>					(* In case of no comment, the complete dataset is not readable *)<br/>					arrTempText[2]	:=	'not available'; (* command field *)<br/>				End_if;<br/>			End_For;<br/>
									<br/>			If (iLine &gt; 0) and (iLine &lt; 241) then	(* copy string array to Lumgate structure *)<br/>				arrLumgates[iLine].xInConfigFile:= True;	(* Lumgate in config file detected *)<br/>				iLength							:= Len(arrTempText[1]);<br/>				iLength							:= iLength - 2;<br/>				strTemp							:= Left(arrTempText[1],1);<br/>				arrLumgates[iLine].iModuleLevel	:= String_to_Int(strTemp);	(* Split address "X-YYY" into segment and module number *)<br/>				arrLumgates[iLine].iModuleLevel	:= arrLumgates[iLine].iModuleLevel - 1;<br/>
									<br/>				If iLength &gt; 0 then	<br/>			(* count configured Lumgates per segment to compare the configured and the real connected Lumgates *)<br/>					If arrLumgates[iLine].iModuleLevel = 0 then<br/>						arrSegment[1]	:=	arrSegment[1] + 1;<br/>					Elsif arrLumgates[iLine].iModuleLevel = 1 then<br/>						arrSegment[2]	:=	arrSegment[2] + 1;<br/>					Elsif arrLumgates[iLine].iModuleLevel = 2 then<br/>						arrSegment[3]	:=	arrSegment[3] + 1;<br/>					Elsif arrLumgates[iLine].iModuleLevel = 3 then<br/>						arrSegment[4]	:=	arrSegment[4] + 1;<br/>					End_if;<br/>					strTemp								:= Right(arrTempText[1],iLength);<br/>					arrLumgates[iLine].iModuleNumber	:= String_to_Int(strTemp);<br/>				End_If;<br/>
									<br/>				arrLumgates[iLine].strDescription:= arrTempText[2];<br/>				If EQ_String(arrTempText[3],'1') then<br/>					arrLumgates[iLine].xFailMode		:= True;<br/>				Else<br/>					arrLumgates[iLine].xFailMode		:= False;<br/>				End_If;<br/>				arrLumgates[iLine].iOutputLevelFailsave	:= String_To_Int(arrTempText[4]);<br/>
									<br/>				(* V2.01 Changes: Set Relay default values *)<br/>				arrLumgates[iLine].xFailsaveRelay1		:= True;<br/>				arrLumgates[iLine].xFailsaveRelay2		:= True;<br/>				arrLumgates[iLine].xRelay1_NC 			:= True;<br/>				arrLumgates[iLine].xRelay2_NC			:= True;<br/>
									<br/>
									<br/>				arrLumgates[iLine].udtCloLed.udiHours	:= String_To_Udint(arrTempText[5]);<br/>				arrLumgates[iLine].udtCloLed.rPercentage:= String_To_Real(arrTempText[6]);<br/>				(* activate clo in case of existing data ( &gt; 0 ) *)<br/>				arrLumgates[iLine].udtCloLed.xActive	:= arrLumgates[iLine].udtCloLed.udiHours &gt; Udint#0 &amp; arrLumgates[iLine].udtCloLed.rPercentage &gt; 0.0;<br/>
									<br/>				arrLumgates[iLine].udtCloMaintenance.udiHours		:= String_To_Udint(arrTempText[7]);<br/>				arrLumgates[iLine].udtCloMaintenance.rPercentage	:= String_To_Real(arrTempText[8]);<br/>				(* activate maintenance factor in case of existing data ( &gt; 0 ) *)<br/>				arrLumgates[iLine].udtCloMaintenance.xActive		:= arrLumgates[iLine].udtCloMaintenance.udiHours &gt; Udint#0 &amp; arrLumgates[iLine].udtCloMaintenance.rPercentage &gt; 0.0;<br/>
									<br/>				arrLumgates[iLine].udtCurrentCheck.rPercentageWarning			:= String_To_Real(arrTempText[9]);<br/>				arrLumgates[iLine].udtCurrentCheck.xActiveCurrentCheckWarning	:= arrLumgates[iLine].udtCurrentCheck.rPercentageWarning &gt; 0.0;<br/>				(* activate current warnings in case of existing data ( &gt; 0 ) *)<br/>
									<br/>				arrLumgates[iLine].udtCurrentCheck.rPercentageError				:= String_To_Real(arrTempText[10]);<br/>				arrLumgates[iLine].udtCurrentCheck.xActiveCurrentCheckError		:= arrLumgates[iLine].udtCurrentCheck.rPercentageError &gt; 0.0;<br/>				(* activate current alarms in case of existing data ( &gt; 0 ) *)<br/>
									<br/>				For iLoop := 11 to 60 do<br/>					iPositionScene	:= iLoop - 10;<br/>					(* Activate scenes in case of existing data ( &gt; 0 ) *)<br/>					If EQ_String(arrTempText[iLoop],'X') Or EQ_String(arrTempText[iLoop],'') then<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].iValue		:= 0;<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].xUsed		:= False;<br/>					Else<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].iValue		:= String_To_Int(arrTempText[iLoop]);<br/>						If arrLumgates[iLine].arrDimmingScene[iPositionScene].iValue = 0 then<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay1	:=	False;<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay2	:=	False;<br/>						Else<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay1	:=	True;<br/>							arrLumgates[iLine].arrDimmingScene[iPositionScene].xRelay2	:=	True;<br/>						End_if;<br/>						arrLumgates[iLine].arrDimmingScene[iPositionScene].xUsed		:= True;<br/>					End_If;<br/>				End_For;<br/>
									<br/>				For iLoop := 61 to 75 do<br/>					iPositionScene	:= iLoop - 60;<br/>					(* Activate special scenes in case of existing data ( &gt; 0 ) *)<br/>					If EQ_String(arrTempText[iLoop],'X') Or EQ_String(arrTempText[iLoop],'') then<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].iValue		:= 0;<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].xUsed		:= False;<br/>					Else<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].iValue		:= String_To_Int(arrTempText[iLoop]);<br/>						If arrLumgates[iLine].arrSpecialScene[iPositionScene].iValue = 0 then<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay1	:=	False;<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay2	:=	False;<br/>						Else<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay1	:=	True;<br/>							arrLumgates[iLine].arrSpecialScene[iPositionScene].xRelay2	:=	True;<br/>						End_if;<br/>						arrLumgates[iLine].arrSpecialScene[iPositionScene].xUsed		:= True;<br/>					End_If;<br/>				End_For;<br/>				(* Safe data to recognize changes *)<br/>				arrLumgateConfig[iLine].arrDimmingScene			:=	arrLumgates[iLine].arrDimmingScene;<br/>				arrLumgateConfig[iLine].arrSpecialScene			:=	arrLumgates[iLine].arrSpecialScene;<br/>				arrLumgateConfig[iLine].iOutputLevelFailsave	:=	arrLumgates[iLine].iOutputLevelFailsave;<br/>				arrLumgateConfig[iLine].strDescription 			:=	arrLumgates[iLine].strDescription;<br/>				arrLumgateConfig[iLine].udtCloLed 				:=	arrLumgates[iLine].udtCloLed;<br/>				arrLumgateConfig[iLine].udtCloMaintenance		:=	arrLumgates[iLine].udtCloMaintenance;<br/>				arrLumgateConfig[iLine].udtCurrentCheck			:=	arrLumgates[iLine].udtCurrentCheck;<br/>				arrLumgateConfig[iLine].xFailMode				:=	arrLumgates[iLine].xFailMode;<br/>			Else<br/>				xAlarm	:=	True;<br/>				strDiag	:=	'Error: To many Lumgates configured';<br/>			End_if;<br/>		End_if;<br/>
									<br/>		xLineReady			:= False;<br/>		iReadConfiguration	:= 0;<br/>
									<br/>	13:	(* L20 configuration *)<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 8.0;<br/>
									<br/>		Case iLine Of <br/>			1:<br/>				rLoadMaker					:=	8.0;<br/>				strLoadText					:=	'L20 configuration...';<br/>				arr_Inputs_L20[1].xActive	:= EQ_String(strLineData,'Sensor channel 1: 1');<br/>			2:<br/>				arr_Inputs_L20[2].xActive	:= EQ_String(strLineData,'Sensor channel 2: 1');<br/>			3:<br/>				arr_Inputs_L20[3].xActive	:= EQ_String(strLineData,'Sensor channel 3: 1');<br/>			4:<br/>				arr_Inputs_L20[4].xActive	:= EQ_String(strLineData,'Sensor channel 4: 1');<br/>
									<br/>			5:	(* Max analog values to norm 4 - 20 mA to max. 0.0 - 100000.0 *)<br/>				strTempValue				:=	Delete(strLineData,35,1);<br/>				udiTempValue				:=	string_to_udint(strTempValue);<br/>				udtL20Config.rMaxCd1		:=	limit_real(0.0,udint_to_real(udiTempValue),100000.0);<br/>
									<br/>			6:	<br/>				strTempValue				:=	Delete(strLineData,35,1);<br/>				udiTempValue				:=	string_to_udint(strTempValue);<br/>				udtL20Config.rMaxCd2		:=	limit_real(0.0,udint_to_real(udiTempValue),100000.0);<br/>
									<br/>			7:	<br/>				strTempValue				:=	Delete(strLineData,35,1);<br/>				udiTempValue				:=	string_to_udint(strTempValue);<br/>				udtL20Config.rMaxCd3		:=	limit_real(0.0,udint_to_real(udiTempValue),100000.0);<br/>
									<br/>			8:	<br/>				strTempValue				:=	Delete(strLineData,35,1);<br/>				udiTempValue				:=	string_to_udint(strTempValue);<br/>				udtL20Config.rMaxCd4		:=	limit_real(0.0,udint_to_real(udiTempValue),100000.0);<br/>
									<br/>			9:	(* Limit the analog input sources *)<br/>				strTempValue						:= Right(strLineData,1);<br/>				iTempValue							:= String_To_Int(strTempValue);<br/>				udtL20Config.iBackup_1_2_3_4_Limit	:= iTempValue;<br/>
									<br/>			10:<br/>				strTempValue						:= Right(strLineData,1);<br/>				iTempValue							:= String_to_Int(strTempValue);<br/>				udtL20Config.iBackup_2_3_4_1_Limit	:= iTempValue;<br/>
									<br/>			11:<br/>				strTempValue						:= Right(strLineData,1);<br/>				iTempValue							:= String_to_Int(strTempValue);<br/>				udtL20Config.iBackup_3_4_1_2_Limit	:= iTempValue;<br/>
									<br/>			12:<br/>				strTempValue						:= Right(strLineData,1);<br/>				iTempValue							:= String_to_Int(strTempValue);<br/>				udtL20Config.iBackup_4_1_2_3_Limit	:= iTempValue;<br/>				rLoadMaker					:=	100.0;<br/>		End_Case;<br/>
									<br/>		arrActL20Inputs	:=	arr_Inputs_L20;<br/>		udtActL20Config	:=	udtL20Config;<br/>
									<br/>		xLineReady			:= False;<br/>		iReadConfiguration	:= 0;<br/>
									<br/>	14:	(* Threshold configuration 1 *)<br/>		(* Step 15 - 17 is equal to 14 for different Threshold configurations *)<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 1.7;<br/>
									<br/>		Case iLine Of<br/>		1:		udtProjectDescription.strName			:= Delete(strLineData,6,1);<br/>				rLoadMaker					:=	1.7;<br/>				strLoadText					:=	'Threshold configuration 1...';<br/>		2:		udtProjectDescription.strDescription	:= Delete(strLineData,13,1);<br/>		3:		udtProjectDescription.strLocation		:= Delete(strLineData,10,1);<br/>		4:		udtProjectDescription.strDesigner		:= Delete(strLineData,10,1);<br/>		5:		udtProjectDescription.strRevision		:= Delete(strLineData,10,1);<br/>
									<br/>		6: 		strTempValue	:= Delete(strLineData,7,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_1.iDelay:= iTempValue;<br/>				iDelay	:=	iTempValue;<br/>
									<br/>				(* V2.00 set default values until new configuration files are designd *)<br/>				(* These values are only remanent *)<br/>				If udtLevelConfiguration_L20_1.diAverageTime = dint#0 then<br/>					udtLevelConfiguration_L20_1.diAverageTime	:=	dint#5;<br/>				End_if;<br/>				If udtLevelConfiguration_L20_1.iHysteric = 0 then<br/>					udtLevelConfiguration_L20_1.iHysteric	:=	3;<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_1.strName1,'') then<br/>					udtLevelConfiguration_L20_1.strName1	:=	'Option 1';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_1.strName2,'') then<br/>					udtLevelConfiguration_L20_1.strName2	:=	'Option 2';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_1.strName3,'') then<br/>					udtLevelConfiguration_L20_1.strName3	:=	'Option 3';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_1.strName4,'') then<br/>					udtLevelConfiguration_L20_1.strName4	:=	'Option 4';<br/>				End_if;<br/>
									<br/>		7: 		(* Select source *)<br/>				strTempValue	:= Delete(strLineData,14,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_1.iInputValue:= iTempValue;	<br/>
									<br/>		8: 		(* Activate threshold levels *)<br/>				strTempValue	:= Delete(strLineData,15,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iTempValue		:= Limit_Int(1,iTempValue,25);<br/>
									<br/>				For iLoop := 1 To 25 do<br/>					udtLevelConfiguration_L20_1.arrScenarioActive[iLoop]:= False;<br/>				End_For;<br/>
									<br/>				If iLoop &gt; 0 then<br/>					For iLoop := 1 to iTempValue do<br/>							udtLevelConfiguration_L20_1.arrScenarioActive[iLoop]	:=	True;<br/>					End_For;<br/>				End_If;<br/>
									<br/>		9,11,13,15,17,19,21,23,25:							(* Scene options 1 - 9 *)<br/>				If iLine = 9 then<br/>					iPosition	:=	1;<br/>				Else<br/>					iPosition	:=	iPosition + 1;<br/>				End_if;<br/>				If get_char(strLineData,1) = 48 then<br/>					strTempValue	:=	Delete(strLineData,7,1);<br/>				Else<br/>					strTempValue	:=	Delete(strLineData,6,1);<br/>				End_if;<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 1st option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 2nd option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 3rd option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 4th option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);	(* 5th option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][5]	:=	string_to_int(strTempValue);<br/>				udtLevelConfiguration_L20_1.xActive 	:=	True;<br/>
									<br/>		27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57:	(* Scene options 10 - 25 *)<br/>				iPosition	:=	iPosition + 1;<br/>				strTempValue	:=	Delete(strLineData,7,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 1st option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 2nd option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 3rd option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);			(* 4th option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);	(* 5th option *)<br/>				arrScenarioConfiguration_L20_1[iPosition][5]	:=	string_to_int(strTempValue);<br/>
									<br/>		10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58:	(* Thresholds *)<br/>				If iLine = 10 then<br/>					iPosition2	:=	1;<br/>				Else<br/>					iPosition2	:=	iPosition2 + 1;<br/>				End_if;<br/>				strTempValue	:=	Delete(strLineData,1,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);					(* Configuration 1 *)<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig1[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);					(* Configuration 2 *)<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig2[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);					(* Configuration 3 *)<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig3[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				If iTemp &gt; 0 then<br/>					strTempValue2	:=	Left(strTempValue,iTemp);<br/>				Else<br/>					strTempValue2	:=	strTempValue;<br/>				End_if;															(* Configuration 4 *)<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig4[iPosition2]	:=	string_to_int(strTempValue2);<br/>		<br/>		(* Old config file structure from V1.00: *)<br/>
									<br/>			(*	strTempValue	:= Delete(strLineData,19,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 8;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig1[iPosition]:= iTempValue;<br/>
									<br/>		18..32: strTempValue	:= Delete(strLineData,20,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 8;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig1[iPosition]:= iTempValue;<br/>
									<br/>		33..41: strTempValue	:= Delete(strLineData,19,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 32;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig2[iPosition]:= iTempValue;<br/>
									<br/>		42..56: strTempValue	:= Delete(strLineData,20,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 32;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig2[iPosition]:= iTempValue;<br/>
									<br/>		57..65: strTempValue	:= Delete(strLineData,19,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 56;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig3[iPosition]:= iTempValue;<br/>
									<br/>		66..80: strTempValue	:= Delete(strLineData,20,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 56;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig3[iPosition]:= iTempValue;<br/>
									<br/>		81..89: strTempValue	:= Delete(strLineData,19,1);<br/>				iTempValue		:= String_to_Int(strTempValue);<br/>				iPosition		:= iLine - 80;<br/>				udtLevelConfiguration_L20_1.arrScenarioConfig4[iPosition]:= iTempValue;<br/>
									<br/>		90..104:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 80;<br/>					udtLevelConfiguration_L20_1.arrScenarioConfig4[iPosition]:= iTempValue;<br/>
									<br/>		105..109:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 104;<br/>					arrScenarioConfiguration_L20_1[1][iPosition]:= iTempValue;<br/>
									<br/>		110..114:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 109;<br/>					arrScenarioConfiguration_L20_1[2][iPosition]:= iTempValue;<br/>
									<br/>		115..119:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 114;<br/>					arrScenarioConfiguration_L20_1[3][iPosition]:= iTempValue;<br/>
									<br/>		120..124:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 119;<br/>					arrScenarioConfiguration_L20_1[4][iPosition]:= iTempValue;<br/>
									<br/>		125..129:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 124;<br/>					arrScenarioConfiguration_L20_1[5][iPosition]:= iTempValue;<br/>
									<br/>		130..134:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 129;<br/>					arrScenarioConfiguration_L20_1[6][iPosition]:= iTempValue;<br/>
									<br/>		135..139:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 134;<br/>					arrScenarioConfiguration_L20_1[7][iPosition]:= iTempValue;<br/>
									<br/>		140..144:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 139;<br/>					arrScenarioConfiguration_L20_1[8][iPosition]:= iTempValue;<br/>
									<br/>		145..149:	strTempValue	:= Delete(strLineData,19,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 144;<br/>					arrScenarioConfiguration_L20_1[9][iPosition]:= iTempValue;<br/>
									<br/>		150..154:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 149;<br/>					arrScenarioConfiguration_L20_1[10][iPosition]:= iTempValue;<br/>
									<br/>		155..159:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 154;<br/>					arrScenarioConfiguration_L20_1[11][iPosition]:= iTempValue;<br/>
									<br/>		160..164:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 159;<br/>					arrScenarioConfiguration_L20_1[12][iPosition]:= iTempValue;<br/>
									<br/>		165..169:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 164;<br/>					arrScenarioConfiguration_L20_1[13][iPosition]:= iTempValue;<br/>
									<br/>		170..174:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 169;<br/>					arrScenarioConfiguration_L20_1[14][iPosition]:= iTempValue;<br/>
									<br/>		175..179:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 174;<br/>					arrScenarioConfiguration_L20_1[15][iPosition]:= iTempValue;<br/>
									<br/>		180..184:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 179;<br/>					arrScenarioConfiguration_L20_1[16][iPosition]:= iTempValue;<br/>
									<br/>		185..189:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 184;<br/>					arrScenarioConfiguration_L20_1[17][iPosition]:= iTempValue;<br/>
									<br/>		190..194:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 189;<br/>					arrScenarioConfiguration_L20_1[18][iPosition]:= iTempValue;<br/>
									<br/>		195..199:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 194;<br/>					arrScenarioConfiguration_L20_1[19][iPosition]:= iTempValue;<br/>
									<br/>		200..204:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 199;<br/>					arrScenarioConfiguration_L20_1[20][iPosition]:= iTempValue;<br/>
									<br/>		205..209:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 204;<br/>					arrScenarioConfiguration_L20_1[21][iPosition]:= iTempValue;<br/>
									<br/>		210..214:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 209;<br/>					arrScenarioConfiguration_L20_1[22][iPosition]:= iTempValue;<br/>
									<br/>		215..219:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 214;<br/>					arrScenarioConfiguration_L20_1[23][iPosition]:= iTempValue;<br/>
									<br/>		220..224:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 219;<br/>					arrScenarioConfiguration_L20_1[24][iPosition]:= iTempValue;<br/>
									<br/>		225..229:	strTempValue	:= Delete(strLineData,20,1);<br/>					iTempValue		:= String_to_Int(strTempValue);<br/>					iPosition		:= iLine - 224;<br/>					arrScenarioConfiguration_L20_1[25][iPosition]:= iTempValue; *)<br/>		Else<br/>			xAlarm	:=	True;<br/>			strDiag	:=	'Error: Invalid Threshold 1 configuration file format';<br/>		End_Case;<br/>
									<br/>		(* Safe data to recognize changes *)<br/>		udtActThresholdConfig1		:=	udtLevelConfiguration_L20_1;<br/>		arrActScenarioConfig_L20_1	:=	arrScenarioConfiguration_L20_1;<br/>
									<br/>		xLineReady			:= False;<br/>		iReadConfiguration	:= 0;<br/>
									<br/>
									<br/>	15:	(* Threshold configuration 2 *)<br/>		(* Equal to step 14 for Threshold table 2 *)<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 1.7;<br/>
									<br/>		Case iLine Of<br/>		1:		udtProjectDescription.strName			:=	Delete(strLineData,6,1);<br/>				rLoadMaker					:=	1.7;<br/>				strLoadText					:=	'Threshold configuration 2...';<br/>		2:		udtProjectDescription.strDescription	:=	Delete(strLineData,13,1);<br/>		3:		udtProjectDescription.strLocation		:=	Delete(strLineData,10,1);<br/>		4:		udtProjectDescription.strDesigner		:=	Delete(strLineData,10,1);<br/>		5:		udtProjectDescription.strRevision		:=	Delete(strLineData,10,1);<br/>
									<br/>		6: 		strTempValue							:=	Delete(strLineData,7,1);<br/>				iTempValue								:=	String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_2.iDelay		:=	iTempValue;<br/>				If udtLevelConfiguration_L20_2.diAverageTime = dint#0 then<br/>					udtLevelConfiguration_L20_2.diAverageTime	:=	dint#5;<br/>				End_if;<br/>				If udtLevelConfiguration_L20_2.iHysteric = 0 then<br/>					udtLevelConfiguration_L20_2.iHysteric		:=	3;<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_2.strName1,'') then<br/>					udtLevelConfiguration_L20_2.strName1	:=	'Option 1';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_2.strName2,'') then<br/>					udtLevelConfiguration_L20_2.strName2	:=	'Option 2';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_1.strName3,'') then<br/>					udtLevelConfiguration_L20_2.strName3	:=	'Option 3';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_1.strName4,'') then<br/>					udtLevelConfiguration_L20_2.strName4	:=	'Option 4';<br/>				End_if;<br/>
									<br/>		7: 		strTempValue							:=	Delete(strLineData,14,1);<br/>				iTempValue								:=	String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_2.iInputValue	:=	iTempValue;<br/>
									<br/>		8: 		strTempValue							:=	Delete(strLineData,15,1);<br/>				iTempValue								:=	String_to_Int(strTempValue);<br/>				iTempValue								:=	Limit_Int(1,iTempValue,25);<br/>
									<br/>				For iLoop	:=	1 to 25 do<br/>						udtLevelConfiguration_L20_2.arrScenarioActive[iLoop]		:=	False;<br/>				End_For;<br/>
									<br/>				If iLoop &gt; 0 then<br/>					For iLoop := 1 to iTempValue do<br/>							udtLevelConfiguration_L20_2.arrScenarioActive[iLoop]	:=	True;<br/>					End_For;<br/>				End_If;<br/>
									<br/>		9,11,13,15,17,19,21,23,25:							(* Scene options 1 - 9 *)<br/>				If iLine = 9 then<br/>					iPosition	:=	1;<br/>				Else<br/>					iPosition	:=	iPosition + 1;<br/>				End_if;<br/>				If get_char(strLineData,1) = 48 then<br/>					strTempValue	:=	Delete(strLineData,7,1);<br/>				Else<br/>					strTempValue	:=	Delete(strLineData,6,1);<br/>				End_if;<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				arrScenarioConfiguration_L20_2[iPosition][5]	:=	string_to_int(strTempValue);<br/>				udtLevelConfiguration_L20_2.xActive 	:=	True;<br/>
									<br/>		27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57:	(* Scene options 10 - 25 *)<br/>				iPosition	:=	iPosition + 1;<br/>				strTempValue	:=	Delete(strLineData,7,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_2[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				arrScenarioConfiguration_L20_2[iPosition][5]	:=	string_to_int(strTempValue);<br/>
									<br/>		10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58:	(* Thresholds *)<br/>				If iLine = 10 then<br/>					iPosition2	:=	1;<br/>				Else<br/>					iPosition2	:=	iPosition2 + 1;<br/>				End_if;<br/>				strTempValue	:=	Delete(strLineData,1,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig1[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig2[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig3[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				If iTemp &gt; 0 then<br/>					strTempValue2	:=	Left(strTempValue,iTemp);<br/>				Else<br/>					strTempValue2	:=	strTempValue;<br/>				End_if;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig4[iPosition2]	:=	string_to_int(strTempValue2);<br/>				<br/>		(*		Old config file structure from V1.00:<br/>		<br/>		9..17: 	strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 8;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig1[iPosition]	:=	iTempValue;<br/>
									<br/>		18..32: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 8;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig1[iPosition]	:=	iTempValue;<br/>
									<br/>		33..41: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 32;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig2[iPosition]	:=	iTempValue;<br/>
									<br/>		42..56: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 32;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig2[iPosition]	:=	iTempValue;<br/>
									<br/>		57..65: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 56;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig3[iPosition]	:=	iTempValue;<br/>
									<br/>		66..80: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 56;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig3[iPosition]	:=	iTempValue;<br/>
									<br/>		81..89: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 80;<br/>				udtLevelConfiguration_L20_2.arrScenarioConfig4[iPosition]	:=	iTempValue;<br/>
									<br/>		90..104:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 80;<br/>					udtLevelConfiguration_L20_2.arrScenarioConfig4[iPosition]	:=	iTempValue;<br/>
									<br/>
									<br/>		105..109:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 104;<br/>					arrScenarioConfiguration_L20_2[1][iPosition]	:=	iTempValue;<br/>
									<br/>		110..114:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 109;<br/>					arrScenarioConfiguration_L20_2[2][iPosition]	:=	iTempValue;<br/>
									<br/>		115..119:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 114;<br/>					arrScenarioConfiguration_L20_2[3][iPosition]	:=	iTempValue;<br/>
									<br/>		120..124:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 119;<br/>					arrScenarioConfiguration_L20_2[4][iPosition]	:=	iTempValue;<br/>
									<br/>		125..129:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 124;<br/>					arrScenarioConfiguration_L20_2[5][iPosition]	:=	iTempValue;<br/>
									<br/>		130..134:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 129;<br/>					arrScenarioConfiguration_L20_2[6][iPosition]	:=	iTempValue;<br/>
									<br/>		135..139:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 134;<br/>					arrScenarioConfiguration_L20_2[7][iPosition]	:=	iTempValue;<br/>
									<br/>		140..144:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue	:=	String_to_Int(strTempValue);<br/>					iPosition	:=	iLine - 139;<br/>					arrScenarioConfiguration_L20_2[8][iPosition]	:=	iTempValue;<br/>
									<br/>		145..149:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 144;<br/>					arrScenarioConfiguration_L20_2[9][iPosition]	:=	iTempValue;<br/>
									<br/>		150..154:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 149;<br/>					arrScenarioConfiguration_L20_2[10][iPosition]	:=	iTempValue;<br/>
									<br/>		155..159:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 154;<br/>					arrScenarioConfiguration_L20_2[11][iPosition]	:=	iTempValue;<br/>
									<br/>		160..164:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 159;<br/>					arrScenarioConfiguration_L20_2[12][iPosition]	:=	iTempValue;<br/>
									<br/>		165..169:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 164;<br/>					arrScenarioConfiguration_L20_2[13][iPosition]	:=	iTempValue;<br/>
									<br/>		170..174:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 169;<br/>					arrScenarioConfiguration_L20_2[14][iPosition]	:=	iTempValue;<br/>
									<br/>		175..179:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 174;<br/>					arrScenarioConfiguration_L20_2[15][iPosition]	:=	iTempValue;<br/>
									<br/>		180..184:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 179;<br/>					arrScenarioConfiguration_L20_2[16][iPosition]	:=	iTempValue;<br/>
									<br/>		185..189:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 184;<br/>					arrScenarioConfiguration_L20_2[17][iPosition]	:=	iTempValue;<br/>
									<br/>		190..194:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 189;<br/>					arrScenarioConfiguration_L20_2[18][iPosition]	:=	iTempValue;<br/>
									<br/>		195..199:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 194;<br/>					arrScenarioConfiguration_L20_2[19][iPosition]	:=	iTempValue;<br/>
									<br/>		200..204:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 199;<br/>					arrScenarioConfiguration_L20_2[20][iPosition]	:=	iTempValue;<br/>
									<br/>		205..209:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 204;<br/>					arrScenarioConfiguration_L20_2[21][iPosition]	:=	iTempValue;<br/>
									<br/>		210..214:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 209;<br/>					arrScenarioConfiguration_L20_2[22][iPosition]	:=	iTempValue;<br/>
									<br/>		215..219:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 214;<br/>					arrScenarioConfiguration_L20_2[23][iPosition]	:=	iTempValue;<br/>
									<br/>		220..224:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 219;<br/>					arrScenarioConfiguration_L20_2[24][iPosition]	:=	iTempValue;<br/>
									<br/>		225..229:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 224;<br/>					arrScenarioConfiguration_L20_2[25][iPosition]	:=	iTempValue; *)<br/>		Else<br/>			xAlarm	:=	True;<br/>			strDiag	:=	'Error: Invalid Threshold 2 configuration file format';<br/>		End_Case; <br/>
									<br/>		udtActThresholdConfig2		:=	udtLevelConfiguration_L20_2;<br/>		arrActScenarioConfig_L20_2	:=	arrScenarioConfiguration_L20_2;<br/>
									<br/>		xLineReady			:=	False;<br/>		iReadConfiguration	:=	0;<br/>
									<br/>	16:<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 1.7;<br/>
									<br/>		Case iLine of<br/>		1:		udtProjectDescription.strName			:=	Delete(strLineData,6,1);<br/>				rLoadMaker					:=	1.7;<br/>				strLoadText					:=	'Threshold configuration 3...';<br/>		2:		udtProjectDescription.strDescription	:=	Delete(strLineData,13,1);<br/>		3:		udtProjectDescription.strLocation		:=	Delete(strLineData,10,1);<br/>		4:		udtProjectDescription.strDesigner		:=	Delete(strLineData,10,1);<br/>		5:		udtProjectDescription.strRevision		:=	Delete(strLineData,10,1);<br/>
									<br/>		6: 		strTempValue	:=	Delete(strLineData,7,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_3.iDelay	:=	iTempValue;<br/>				If udtLevelConfiguration_L20_3.diAverageTime = dint#0 then<br/>					udtLevelConfiguration_L20_3.diAverageTime	:=	dint#5;<br/>				End_if;<br/>				If udtLevelConfiguration_L20_3.iHysteric = 0 then<br/>					udtLevelConfiguration_L20_3.iHysteric		:=	3;<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_3.strName1,'') then<br/>					udtLevelConfiguration_L20_3.strName1	:=	'Option 1';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_3.strName2,'') then<br/>					udtLevelConfiguration_L20_3.strName2	:=	'Option 2';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_3.strName3,'') then<br/>					udtLevelConfiguration_L20_3.strName3	:=	'Option 3';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_3.strName4,'') then<br/>					udtLevelConfiguration_L20_3.strName4	:=	'Option 4';<br/>				End_if;<br/>
									<br/>		7: 		strTempValue	:=	Delete(strLineData,14,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_3.iInputValue	:=	iTempValue;<br/>
									<br/>		8: 		strTempValue	:=	Delete(strLineData,15,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iTempValue		:=	Limit_Int(1,iTempValue,25);<br/>
									<br/>				For iLoop := 1 to 25 do<br/>					udtLevelConfiguration_L20_3.arrScenarioActive[iLoop]	:=	False;<br/>				End_For;<br/>
									<br/>				If iLoop &gt; 0 then<br/>					For iLoop := 1 to iTempValue do<br/>						udtLevelConfiguration_L20_3.arrScenarioActive[iLoop]	:=	True;<br/>					End_For;<br/>				End_If;<br/>
									<br/>		9,11,13,15,17,19,21,23,25:							(* Scene options 1 - 9 *)<br/>				If iLine = 9 then<br/>					iPosition	:=	1;<br/>				Else<br/>					iPosition	:=	iPosition + 1;<br/>				End_if;<br/>				If get_char(strLineData,1) = 48 then<br/>					strTempValue	:=	Delete(strLineData,7,1);<br/>				Else<br/>					strTempValue	:=	Delete(strLineData,6,1);<br/>				End_if;<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				arrScenarioConfiguration_L20_3[iPosition][5]	:=	string_to_int(strTempValue);<br/>				udtLevelConfiguration_L20_3.xActive	:=	True;<br/>
									<br/>		27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57:	(* Scene options 10 - 25 *)<br/>				iPosition	:=	iPosition + 1;<br/>				strTempValue	:=	Delete(strLineData,7,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_3[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				arrScenarioConfiguration_L20_3[iPosition][5]	:=	string_to_int(strTempValue);<br/>
									<br/>		10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58:	(* Thresholds *)<br/>				If iLine = 10 then<br/>					iPosition2	:=	1;<br/>				Else<br/>					iPosition2	:=	iPosition2 + 1;<br/>				End_if;<br/>				strTempValue	:=	Delete(strLineData,1,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig1[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig2[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig3[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				If iTemp &gt; 0 then<br/>					strTempValue2	:=	Left(strTempValue,iTemp);<br/>				Else<br/>					strTempValue2	:=	strTempValue;<br/>				End_if;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig4[iPosition2]	:=	string_to_int(strTempValue2);<br/>
									<br/>	(*	9..17: 	strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 8;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig1[iPosition]	:=	iTempValue;<br/>
									<br/>		18..32: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 8;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig1[iPosition]	:=	iTempValue;<br/>
									<br/>		33..41: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 32;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig2[iPosition]	:=	iTempValue;<br/>
									<br/>		42..56: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 32;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig2[iPosition]	:=	iTempValue;<br/>
									<br/>		57..65: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 56;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig3[iPosition]	:=	iTempValue;<br/>
									<br/>		66..80: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 56;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig3[iPosition]	:=	iTempValue;<br/>
									<br/>		81..89: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 80;<br/>				udtLevelConfiguration_L20_3.arrScenarioConfig4[iPosition]	:=	iTempValue;<br/>
									<br/>		90..104:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 80;<br/>					udtLevelConfiguration_L20_3.arrScenarioConfig4[iPosition]	:=	iTempValue;<br/>
									<br/>		105..109:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 104;<br/>					arrScenarioConfiguration_L20_3[1][iPosition]	:=	iTempValue;<br/>
									<br/>		110..114:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 109;<br/>					arrScenarioConfiguration_L20_3[2][iPosition]	:=	iTempValue;<br/>
									<br/>		115..119:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 114;<br/>					arrScenarioConfiguration_L20_3[3][iPosition]	:=	iTempValue;<br/>
									<br/>		120..124:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 119;<br/>					arrScenarioConfiguration_L20_3[4][iPosition]	:=	iTempValue;<br/>
									<br/>		125..129:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 124;<br/>					arrScenarioConfiguration_L20_3[5][iPosition]	:=	iTempValue;<br/>
									<br/>		130..134:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 129;<br/>					arrScenarioConfiguration_L20_3[6][iPosition]	:=	iTempValue;<br/>
									<br/>		135..139:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 134;<br/>					arrScenarioConfiguration_L20_3[7][iPosition]	:=	iTempValue;<br/>
									<br/>		140..144:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 139;<br/>					arrScenarioConfiguration_L20_3[8][iPosition]	:=	iTempValue;<br/>
									<br/>		145..149:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 144;<br/>					arrScenarioConfiguration_L20_3[9][iPosition]	:=	iTempValue;<br/>
									<br/>		150..154:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 149;<br/>					arrScenarioConfiguration_L20_3[10][iPosition]	:=	iTempValue;<br/>
									<br/>		155..159:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 154;<br/>					arrScenarioConfiguration_L20_3[11][iPosition]	:=	iTempValue;<br/>
									<br/>		160..164:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 159;<br/>					arrScenarioConfiguration_L20_3[12][iPosition]	:=	iTempValue;<br/>
									<br/>		165..169:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 164;<br/>					arrScenarioConfiguration_L20_3[13][iPosition]	:=	iTempValue;<br/>
									<br/>		170..174:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 169;<br/>					arrScenarioConfiguration_L20_3[14][iPosition]	:=	iTempValue;<br/>
									<br/>		175..179:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 174;<br/>					arrScenarioConfiguration_L20_3[15][iPosition]	:=	iTempValue;<br/>
									<br/>		180..184:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 179;<br/>					arrScenarioConfiguration_L20_3[16][iPosition]	:=	iTempValue;<br/>
									<br/>		185..189:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 184;<br/>					arrScenarioConfiguration_L20_3[17][iPosition]	:=	iTempValue;<br/>
									<br/>		190..194:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 189;<br/>					arrScenarioConfiguration_L20_3[18][iPosition]	:=	iTempValue;<br/>
									<br/>		195..199:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 194;<br/>					arrScenarioConfiguration_L20_3[19][iPosition]	:=	iTempValue;<br/>
									<br/>		200..204:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 199;<br/>					arrScenarioConfiguration_L20_3[20][iPosition]	:=	iTempValue;<br/>
									<br/>		205..209:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 204;<br/>					arrScenarioConfiguration_L20_3[21][iPosition]	:=	iTempValue;<br/>
									<br/>		210..214:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 209;<br/>					arrScenarioConfiguration_L20_3[22][iPosition]	:=	iTempValue;<br/>
									<br/>		215..219:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 214;<br/>					arrScenarioConfiguration_L20_3[23][iPosition]	:=	iTempValue;<br/>
									<br/>		220..224:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 219;<br/>					arrScenarioConfiguration_L20_3[24][iPosition]	:=	iTempValue;<br/>
									<br/>		225..229:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 224;<br/>					arrScenarioConfiguration_L20_3[25][iPosition]	:=	iTempValue; *)<br/>		Else<br/>			xAlarm	:=	True;<br/>			strDiag	:=	'Error: Invalid Threshold 3 configuration file format';<br/>		End_Case; <br/>
									<br/>		udtActThresholdConfig3		:=	udtLevelConfiguration_L20_3;<br/>		arrActScenarioConfig_L20_3	:=	arrScenarioConfiguration_L20_3;<br/>
									<br/>		xLineReady			:=	False;<br/>		iReadConfiguration	:=	0;<br/>
									<br/>
									<br/>	17:<br/>		iLine			:=	iLine + 1;<br/>		rLoadMaker		:=	rLoadMaker + 1.7;<br/>
									<br/>		Case iLine Of<br/>		1:		udtProjectDescription.strName			:=	Delete(strLineData,6,1);<br/>				rLoadMaker					:=	1.7;<br/>				strLoadText					:=	'Threshold configuration 4...';<br/>		2:		udtProjectDescription.strDescription	:=	Delete(strLineData,13,1);<br/>		3:		udtProjectDescription.strLocation		:=	Delete(strLineData,10,1);<br/>		4:		udtProjectDescription.strDesigner		:=	Delete(strLineData,10,1);<br/>		5:		udtProjectDescription.strRevision		:=	Delete(strLineData,10,1);<br/>
									<br/>		6: 		strTempValue	:=	Delete(strLineData,7,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_4.iDelay	:=	iTempValue;<br/>				If udtLevelConfiguration_L20_4.diAverageTime = dint#0 then<br/>					udtLevelConfiguration_L20_4.diAverageTime	:=	dint#5;<br/>				End_if;<br/>				If udtLevelConfiguration_L20_4.iHysteric = 0 then<br/>					udtLevelConfiguration_L20_4.iHysteric		:=	3;<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_4.strName1,'') then<br/>					udtLevelConfiguration_L20_4.strName1	:=	'Option 1';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_4.strName2,'') then<br/>					udtLevelConfiguration_L20_4.strName2	:=	'Option 2';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_4.strName3,'') then<br/>					udtLevelConfiguration_L20_4.strName3	:=	'Option 3';<br/>				End_if;<br/>				If eq_string(udtLevelConfiguration_L20_4.strName4,'') then<br/>					udtLevelConfiguration_L20_4.strName4	:=	'Option 4';<br/>				End_if;<br/>
									<br/>		7: 		strTempValue	:=	Delete(strLineData,14,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				udtLevelConfiguration_L20_4.iInputValue	:=	iTempValue;<br/>
									<br/>		8: 		strTempValue	:=	Delete(strLineData,15,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iTempValue		:=	Limit_Int(1,iTempValue,25);<br/>
									<br/>				For iLoop := 1 to 25 do<br/>					udtLevelConfiguration_L20_4.arrScenarioActive[iLoop]	:=	False;<br/>				End_For;<br/>
									<br/>				If iLoop &gt; 0 then<br/>					For iLoop := 1 to iTempValue do<br/>						udtLevelConfiguration_L20_4.arrScenarioActive[iLoop]	:=	True;<br/>					End_For;<br/>				End_If;<br/>
									<br/>		9,11,13,15,17,19,21,23,25:							(* Scene options 1 - 9 *)<br/>				If iLine = 9 then<br/>					iPosition	:=	1;<br/>				Else<br/>					iPosition	:=	iPosition + 1;<br/>				End_if;<br/>				If get_char(strLineData,1) = 48 then<br/>					strTempValue	:=	Delete(strLineData,7,1);<br/>				Else<br/>					strTempValue	:=	Delete(strLineData,6,1);<br/>				End_if;<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				arrScenarioConfiguration_L20_4[iPosition][5]	:=	string_to_int(strTempValue);<br/>				udtLevelConfiguration_L20_4.xActive	:=	True;<br/>
									<br/>		27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57:	(* Scene options 10 - 25 *)<br/>				iPosition	:=	iPosition + 1;<br/>				strTempValue	:=	Delete(strLineData,7,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][1]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][3]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				arrScenarioConfiguration_L20_4[iPosition][4]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				arrScenarioConfiguration_L20_4[iPosition][5]	:=	string_to_int(strTempValue);<br/>
									<br/>		10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58:	(* Thresholds *)<br/>				If iLine = 10 then<br/>					iPosition2	:=	1;<br/>				Else<br/>					iPosition2	:=	iPosition2 + 1;<br/>				End_if;<br/>				strTempValue	:=	Delete(strLineData,1,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig1[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig2[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				strTempValue2	:=	Left(strTempValue,iTemp);<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig3[iPosition2]	:=	string_to_int(strTempValue2);<br/>				strTempValue	:=	Delete(strTempValue,iTempValue,1);<br/>				iTempValue		:=	find(strTempValue,';');<br/>				iTemp			:=	iTempValue - 1;<br/>				If iTemp &gt; 0 then<br/>					strTempValue2	:=	Left(strTempValue,iTemp);<br/>				Else<br/>					strTempValue2	:=	strTempValue;<br/>				End_if;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig4[iPosition2]	:=	string_to_int(strTempValue2);<br/>
									<br/>	(*	9..17: 	strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 8;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig1[iPosition]	:=	iTempValue;<br/>
									<br/>		18..32: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 8;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig1[iPosition]	:=	iTempValue;<br/>
									<br/>		33..41: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 32;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig2[iPosition]	:=	iTempValue;<br/>
									<br/>		42..56: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 32;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig2[iPosition]	:=	iTempValue;<br/>
									<br/>		57..65: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 56;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig3[iPosition]	:=	iTempValue;<br/>
									<br/>		66..80: strTempValue	:=	Delete(strLineData,20,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 56;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig3[iPosition]	:=	iTempValue;<br/>
									<br/>		81..89: strTempValue	:=	Delete(strLineData,19,1);<br/>				iTempValue		:=	String_to_Int(strTempValue);<br/>				iPosition		:=	iLine - 80;<br/>				udtLevelConfiguration_L20_4.arrScenarioConfig4[iPosition]	:=	iTempValue;<br/>
									<br/>		90..104:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 80;<br/>					udtLevelConfiguration_L20_4.arrScenarioConfig4[iPosition]	:=	iTempValue;<br/>
									<br/>		105..109:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 104;<br/>					arrScenarioConfiguration_L20_4[1][iPosition]	:=	iTempValue;<br/>
									<br/>		110..114:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 109;<br/>					arrScenarioConfiguration_L20_4[2][iPosition]	:=	iTempValue;<br/>
									<br/>		115..119:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 114;<br/>					arrScenarioConfiguration_L20_4[3][iPosition]	:=	iTempValue;<br/>
									<br/>		120..124:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 119;<br/>					arrScenarioConfiguration_L20_4[4][iPosition]	:=	iTempValue;<br/>
									<br/>		125..129:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 124;<br/>					arrScenarioConfiguration_L20_4[5][iPosition]	:=	iTempValue;<br/>
									<br/>		130..134:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 129;<br/>					arrScenarioConfiguration_L20_4[6][iPosition]	:=	iTempValue;<br/>
									<br/>		135..139:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 134;<br/>					arrScenarioConfiguration_L20_4[7][iPosition]	:=	iTempValue;<br/>
									<br/>		140..144:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 139;<br/>					arrScenarioConfiguration_L20_4[8][iPosition]	:=	iTempValue;<br/>
									<br/>		145..149:	strTempValue	:=	Delete(strLineData,19,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 144;<br/>					arrScenarioConfiguration_L20_4[9][iPosition]	:=	iTempValue;<br/>
									<br/>		150..154:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 149;<br/>					arrScenarioConfiguration_L20_4[10][iPosition]	:=	iTempValue;<br/>
									<br/>		155..159:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 154;<br/>					arrScenarioConfiguration_L20_4[11][iPosition]	:=	iTempValue;<br/>
									<br/>		160..164:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 159;<br/>					arrScenarioConfiguration_L20_4[12][iPosition]	:=	iTempValue;<br/>
									<br/>		165..169:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 164;<br/>					arrScenarioConfiguration_L20_4[13][iPosition]	:=	iTempValue;<br/>
									<br/>		170..174:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 169;<br/>					arrScenarioConfiguration_L20_4[14][iPosition]	:=	iTempValue;<br/>
									<br/>		175..179:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 174;<br/>					arrScenarioConfiguration_L20_4[15][iPosition]	:=	iTempValue;<br/>
									<br/>		180..184:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 179;<br/>					arrScenarioConfiguration_L20_4[16][iPosition]	:=	iTempValue;<br/>
									<br/>		185..189:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 184;<br/>					arrScenarioConfiguration_L20_4[17][iPosition]	:=	iTempValue;<br/>
									<br/>		190..194:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 189;<br/>					arrScenarioConfiguration_L20_4[18][iPosition]	:=	iTempValue;<br/>
									<br/>		195..199:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 194;<br/>					arrScenarioConfiguration_L20_4[19][iPosition]	:=	iTempValue;<br/>
									<br/>		200..204:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 199;<br/>					arrScenarioConfiguration_L20_4[20][iPosition]	:=	iTempValue;<br/>
									<br/>		205..209:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 204;<br/>					arrScenarioConfiguration_L20_4[21][iPosition]	:=	iTempValue;<br/>
									<br/>		210..214:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 209;<br/>					arrScenarioConfiguration_L20_4[22][iPosition]	:=	iTempValue;<br/>
									<br/>		215..219:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 214;<br/>					arrScenarioConfiguration_L20_4[23][iPosition]	:=	iTempValue;<br/>
									<br/>		220..224:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 219;<br/>					arrScenarioConfiguration_L20_4[24][iPosition]	:=	iTempValue;<br/>
									<br/>		225..229:	strTempValue	:=	Delete(strLineData,20,1);<br/>					iTempValue		:=	String_to_Int(strTempValue);<br/>					iPosition		:=	iLine - 224;<br/>					arrScenarioConfiguration_L20_4[25][iPosition]	:=	iTempValue; *)<br/>		Else<br/>			xAlarm	:=	True;<br/>			strDiag	:=	'Error: Invalid Threshold 4 configuration file format';<br/>		End_Case;<br/>
									<br/>		udtActThresholdConfig4		:=	udtLevelConfiguration_L20_4;<br/>		arrActScenarioConfig_L20_4	:=	arrScenarioConfiguration_L20_4;<br/>
									<br/>		xLineReady			:=	False;<br/>		iReadConfiguration	:=	0;<br/>End_Case;<br/>
									<br/>TON_Delay_Write(IN	:=	iWriteLumgateConfig = 6,PT	:=	T#2s);<br/>
								</p>
							</html>
						</worksheet>
						<worksheet name="CompareConfig">
							<html xmlns="http://www.w3.org/1999/xhtml">
								<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">(* FB_FileHandling / CompareConfig *)<br/>(* Compare actual configuration with the last imported or saved configuration *)<br/>TON_CompareDelay(IN:=(iOldCompare = iCompare),PT:=t#1s); (* Delay between checks to reduce cpu load *)<br/>iOldCompare	:=	iCompare;<br/>
									<br/>If (iWriteLumgateConfig = 0) then<br/>Case iCompare of<br/>	0:	(* Waiting for delay time and compleating reading process *)<br/>		If TON_CompareDelay.Q and not xReadThresholdConfig4 then<br/>			iCompare	:=	1;<br/>		End_if;<br/>
									<br/>	1:	(* Network Parameter *)<br/>		If udtNetworkConfiguration.iMode = udtActNetworkConfiguration.iMode	(* Operation mode. Stand allone, TCS PN, ... *)<br/>		and arrActIP_Address[1] = arrIP_Address[1]<br/>		and arrActSubnetMask[1] = arrSubnetMask[1]<br/>		and arrActStdGateway[1] = arrStdGateway[1]<br/>		and arrActIP_Address[2] = arrIP_Address[2]<br/>		and arrActSubnetMask[2] = arrSubnetMask[2]<br/>		and arrActStdGateway[2] = arrStdGateway[2]<br/>		and arrActIP_Address[3] = arrIP_Address[3]<br/>		and arrActSubnetMask[3] = arrSubnetMask[3]<br/>		and arrActStdGateway[3] = arrStdGateway[3]<br/>		and arrActIP_Address[4] = arrIP_Address[4]<br/>		and arrActSubnetMask[4] = arrSubnetMask[4]<br/>		and arrActStdGateway[4] = arrStdGateway[4]<br/>		and eq_string(udtNetworkConfiguration.strDNS,udtActNetworkConfiguration.strDNS)	(* No function at the moment *)<br/>		and eq_string(udtNetworkConfiguration.strIPModbus,udtActNetworkConfiguration.strIPModbus) then<br/>			xChangedNetConfig	:=	False;<br/>		Else<br/>			xChangedNetConfig	:=	True;<br/>		End_if;<br/>		iCompare	:=	2;<br/>	<br/>	2:	(* L20 Configuration *)<br/>		If udtL20Config.iBackup_1_2_3_4_Limit = udtActL20Config.iBackup_1_2_3_4_Limit<br/>		and udtL20Config.iBackup_2_3_4_1_Limit = udtActL20Config.iBackup_2_3_4_1_Limit<br/>		and udtL20Config.iBackup_3_4_1_2_Limit = udtActL20Config.iBackup_3_4_1_2_Limit<br/>		and udtL20Config.iBackup_4_1_2_3_Limit = udtActL20Config.iBackup_4_1_2_3_Limit<br/>		and udtL20Config.rMaxCd1 = udtActL20Config.rMaxCd1<br/>		and udtL20Config.rMaxCd2 = udtActL20Config.rMaxCd2<br/>		and udtL20Config.rMaxCd3 = udtActL20Config.rMaxCd3<br/>		and udtL20Config.rMaxCd4 = udtActL20Config.rMaxCd4<br/>		and arr_Inputs_L20[1].xActive = arrActL20Inputs[1].xActive<br/>		and arr_Inputs_L20[2].xActive = arrActL20Inputs[2].xActive<br/>		and arr_Inputs_L20[3].xActive = arrActL20Inputs[3].xActive<br/>		and arr_Inputs_L20[4].xActive = arrActL20Inputs[4].xActive then<br/>			xChangedL20Config	:=	False;<br/>		Else<br/>			xChangedL20Config	:=	True;<br/>		End_if;<br/>		iCompare	:=	3;<br/>
									<br/>	3:	(* Threshold 1 *)<br/>		xChangedThreshold1	:=	False;<br/>		If  udtLevelConfiguration_L20_1.iDelay = udtActThresholdConfig1.iDelay			(* \ *)<br/>		and udtLevelConfiguration_L20_1.iInputValue = udtActThresholdConfig1.iInputValue(*  }Write and compare this values only with the first threshold configuration file *)<br/>	(*	and udtLevelConfiguration_L20_1.xActive = udtActThresholdConfig1.xActive		(* / *)<br/>		(*<br/>		Change threshold configuration during the process is allowed...<br/>		...the active configurations are not part of the configuration files...<br/>
									<br/>		and udtLevelConfiguration_L20_1.xActiveConfig1 = udtActThresholdConfig1.xActiveConfig1<br/>		and udtLevelConfiguration_L20_1.xActiveConfig2 = udtActThresholdConfig1.xActiveConfig2<br/>		and udtLevelConfiguration_L20_1.xActiveConfig3 = udtActThresholdConfig1.xActiveConfig3<br/>		and udtLevelConfiguration_L20_1.xActiveConfig4 = udtActThresholdConfig1.xActiveConfig4*) then<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_1.arrScenarioActive[iLoop] &lt;&gt; udtActThresholdConfig1.arrScenarioActive[iLoop] then<br/>					Exit;		(* Count of scenarios *)<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 then<br/>				xChangedThreshold1	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_1.arrScenarioConfig1[iLoop] &lt;&gt; udtActThresholdConfig1.arrScenarioConfig1[iLoop] then<br/>					Exit;		(* Scenario config 1 values *)<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold1	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_1.arrScenarioConfig2[iLoop] &lt;&gt; udtActThresholdConfig1.arrScenarioConfig2[iLoop] then<br/>					Exit;		(* Scenario config 2 values *)<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold1	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_1.arrScenarioConfig3[iLoop] &lt;&gt; udtActThresholdConfig1.arrScenarioConfig3[iLoop] then<br/>					Exit;		(* Scenario config 3 values *)<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold1	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_1.arrScenarioConfig4[iLoop] &lt;&gt; udtActThresholdConfig1.arrScenarioConfig4[iLoop] then<br/>					Exit;		(* Scenario config 4 values *)<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold1	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 25 do<br/>				For iLoop2 := 1 to 5 do<br/>					If arrActScenarioConfig_L20_1[iLoop][iLoop2] &lt;&gt; arrScenarioConfiguration_L20_1[iLoop][iLoop2] then<br/>						Exit;		(* Scene options 1-5 *)<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 6 then<br/>					xChangedThreshold1	:=	True;<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 or iLoop2 &lt; 6 then<br/>				xChangedThreshold1	:=	True;<br/>			End_if;<br/>		Else<br/>			xChangedThreshold1	:=	True;<br/>		End_if;<br/>		iCompare	:=	4;<br/>
									<br/>	4:	(* Threshold 2 *)<br/>		xChangedThreshold2	:=	False;<br/>		If (* udtLevelConfiguration_L20_2.iDelay = udtActThresholdConfig2.iDelay<br/>
									<br/>			use only the delay from the first threshold config file<br/>
									<br/>		and *) udtLevelConfiguration_L20_2.iInputValue = udtActThresholdConfig2.iInputValue<br/>	(*	and udtLevelConfiguration_L20_2.xActive = udtActThresholdConfig2.xActive<br/>		and udtLevelConfiguration_L20_2.xActiveConfig1 = udtActThresholdConfig2.xActiveConfig1<br/>		and udtLevelConfiguration_L20_2.xActiveConfig2 = udtActThresholdConfig2.xActiveConfig2<br/>		and udtLevelConfiguration_L20_2.xActiveConfig3 = udtActThresholdConfig2.xActiveConfig3<br/>		and udtLevelConfiguration_L20_2.xActiveConfig4 = udtActThresholdConfig2.xActiveConfig4*) then<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_2.arrScenarioActive[iLoop] &lt;&gt; udtActThresholdConfig2.arrScenarioActive[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 then<br/>				xChangedThreshold2	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_2.arrScenarioConfig1[iLoop] &lt;&gt; udtActThresholdConfig2.arrScenarioConfig1[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold2	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_2.arrScenarioConfig2[iLoop] &lt;&gt; udtActThresholdConfig2.arrScenarioConfig2[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold2	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_2.arrScenarioConfig3[iLoop] &lt;&gt; udtActThresholdConfig2.arrScenarioConfig3[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold2	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_2.arrScenarioConfig4[iLoop] &lt;&gt; udtActThresholdConfig2.arrScenarioConfig4[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold2	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 25 do<br/>				For iLoop2 := 1 to 5 do<br/>					If arrActScenarioConfig_L20_2[iLoop][iLoop2] &lt;&gt; arrScenarioConfiguration_L20_2[iLoop][iLoop2] then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 6 then<br/>					xChangedThreshold2	:=	True;<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 or iLoop2 &lt; 6 then<br/>				xChangedThreshold2	:=	True;<br/>			End_if;<br/>		Else<br/>			xChangedThreshold2	:=	True;<br/>		End_if;<br/>		iCompare	:=	5;<br/>
									<br/>	5:	(* Threshold 3 *)<br/>		xChangedThreshold3	:=	False;<br/>		If (* udtLevelConfiguration_L20_3.iDelay = udtActThresholdConfig3.iDelay<br/>		and *) udtLevelConfiguration_L20_3.iInputValue = udtActThresholdConfig3.iInputValue<br/>	(*	and udtLevelConfiguration_L20_3.xActive = udtActThresholdConfig3.xActive<br/>		and udtLevelConfiguration_L20_3.xActiveConfig1 = udtActThresholdConfig3.xActiveConfig1<br/>		and udtLevelConfiguration_L20_3.xActiveConfig2 = udtActThresholdConfig3.xActiveConfig2<br/>		and udtLevelConfiguration_L20_3.xActiveConfig3 = udtActThresholdConfig3.xActiveConfig3<br/>		and udtLevelConfiguration_L20_3.xActiveConfig4 = udtActThresholdConfig3.xActiveConfig4*) then<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_3.arrScenarioActive[iLoop] &lt;&gt; udtActThresholdConfig3.arrScenarioActive[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 then<br/>				xChangedThreshold3	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_3.arrScenarioConfig1[iLoop] &lt;&gt; udtActThresholdConfig3.arrScenarioConfig1[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold3	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_3.arrScenarioConfig2[iLoop] &lt;&gt; udtActThresholdConfig3.arrScenarioConfig2[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold3	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_3.arrScenarioConfig3[iLoop] &lt;&gt; udtActThresholdConfig3.arrScenarioConfig3[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold3	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_3.arrScenarioConfig4[iLoop] &lt;&gt; udtActThresholdConfig3.arrScenarioConfig4[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold3	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 25 do<br/>				For iLoop2 := 1 to 5 do<br/>					If arrActScenarioConfig_L20_3[iLoop][iLoop2] &lt;&gt; arrScenarioConfiguration_L20_3[iLoop][iLoop2] then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 6 then<br/>					xChangedThreshold3	:=	True;<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 or iLoop2 &lt; 6 then<br/>				xChangedThreshold3	:=	True;<br/>			End_if;<br/>		Else<br/>			xChangedThreshold3	:=	True;<br/>		End_if;<br/>		iCompare	:=	6;<br/>
									<br/>	6:	(* Threshold 4 *)<br/>		xChangedThreshold4	:=	False;<br/>		If (* udtLevelConfiguration_L20_4.iDelay = udtActThresholdConfig4.iDelay<br/>		and *) udtLevelConfiguration_L20_4.iInputValue = udtActThresholdConfig4.iInputValue<br/>	(*	and udtLevelConfiguration_L20_4.xActive = udtActThresholdConfig4.xActive<br/>		and udtLevelConfiguration_L20_4.xActiveConfig1 = udtActThresholdConfig4.xActiveConfig1<br/>		and udtLevelConfiguration_L20_4.xActiveConfig2 = udtActThresholdConfig4.xActiveConfig2<br/>		and udtLevelConfiguration_L20_4.xActiveConfig3 = udtActThresholdConfig4.xActiveConfig3<br/>		and udtLevelConfiguration_L20_4.xActiveConfig4 = udtActThresholdConfig4.xActiveConfig4*) then<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_4.arrScenarioActive[iLoop] &lt;&gt; udtActThresholdConfig4.arrScenarioActive[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 then<br/>				xChangedThreshold4	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_4.arrScenarioConfig1[iLoop] &lt;&gt; udtActThresholdConfig4.arrScenarioConfig1[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold4	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_4.arrScenarioConfig2[iLoop] &lt;&gt; udtActThresholdConfig4.arrScenarioConfig2[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold4	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_4.arrScenarioConfig3[iLoop] &lt;&gt; udtActThresholdConfig4.arrScenarioConfig3[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold4	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 24 do<br/>				If udtLevelConfiguration_L20_4.arrScenarioConfig4[iLoop] &lt;&gt; udtActThresholdConfig4.arrScenarioConfig4[iLoop] then<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 25 then<br/>				xChangedThreshold4	:=	True;<br/>			End_if;<br/>			For iLoop := 1 to 25 do<br/>				For iLoop2 := 1 to 5 do<br/>					If arrActScenarioConfig_L20_4[iLoop][iLoop2] &lt;&gt; arrScenarioConfiguration_L20_4[iLoop][iLoop2] then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 6 then<br/>					xChangedThreshold4	:=	True;<br/>					Exit;<br/>				End_if;<br/>			End_for;<br/>			If iLoop &lt; 26 or iLoop2 &lt; 6 then<br/>				xChangedThreshold4	:=	True;<br/>			End_if;<br/>		Else<br/>			xChangedThreshold4	:=	True;<br/>		End_if;<br/>		iCompare	:=	7;<br/>
									<br/>	7:	(* Lumgates *)<br/>		xChangedLumgate1	:=	False;<br/>		For iLoop := 1 to 60 do	(* Splitting compare Lumgates in to a couple of steps *)<br/>			If eq_string(arrLumgates[iLoop].strDescription,arrLumgateConfig[iLoop].strDescription)<br/>			and not xTakeActualConfig<br/>			and arrLumgates[iLoop].xRelay1_NC = arrLumgateConfig[iLoop].xRelay1_NC<br/>			and arrLumgates[iLoop].xRelay2_NC = arrLumgateConfig[iLoop].xRelay2_NC<br/>			and arrLumgates[iLoop].xFailsaveRelay1 = arrLumgateConfig[iLoop].xFailsaveRelay1<br/>			and arrLumgates[iLoop].xFailsaveRelay2 = arrLumgateConfig[iLoop].xFailsaveRelay2<br/>			and arrLumgates[iLoop].xFailMode = arrLumgateConfig[iLoop].xFailMode<br/>			and arrLumgates[iLoop].iOutputLevelFailsave = arrLumgateConfig[iLoop].iOutputLevelFailsave<br/>			and arrLumgates[iLoop].udtCloLed.rPercentage = arrLumgateConfig[iLoop].udtCloLed.rPercentage<br/>			and arrLumgates[iLoop].udtCloLed.udiHours = arrLumgateConfig[iLoop].udtCloLed.udiHours<br/>			and arrLumgates[iLoop].udtCloMaintenance.rPercentage = arrLumgateConfig[iLoop].udtCloMaintenance.rPercentage<br/>			and arrLumgates[iLoop].udtCloMaintenance.udiHours = arrLumgateConfig[iLoop].udtCloMaintenance.udiHours<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageError = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageError<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageWarning = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageWarning then<br/>				For iLoop2 := 1 to 50 do<br/>					If arrLumgates[iLoop].arrDimmingScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 51 then<br/>					xChangedLumgate1	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>
									<br/>				For iLoop2 := 1 to 15 do<br/>					If arrLumgates[iLoop].arrSpecialScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 16 then<br/>					xChangedLumgate1	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>			Elsif not arrLumgates[iLoop].xAvailable then<br/>				iLoop	:=	iLoop;<br/>			Else<br/>				Exit;<br/>			End_if;<br/>		End_for;<br/>		If iLoop &lt; 61 then<br/>			xChangedLumgate1	:=	True;<br/>			iCompare		:=	0;<br/>		Else<br/>			iCompare		:=	8;<br/>		End_if;<br/>
									<br/>	8:	(* Lumgates *)<br/>		xChangedLumgate2	:=	False;<br/>		For iLoop := 61 to 120 do<br/>			If eq_string(arrLumgates[iLoop].strDescription,arrLumgateConfig[iLoop].strDescription)<br/>			and arrLumgates[iLoop].xRelay1_NC = arrLumgateConfig[iLoop].xRelay1_NC<br/>			and arrLumgates[iLoop].xRelay2_NC = arrLumgateConfig[iLoop].xRelay2_NC<br/>			and arrLumgates[iLoop].xFailsaveRelay1 = arrLumgateConfig[iLoop].xFailsaveRelay1<br/>			and arrLumgates[iLoop].xFailsaveRelay2 = arrLumgateConfig[iLoop].xFailsaveRelay2<br/>			and arrLumgates[iLoop].xFailMode = arrLumgateConfig[iLoop].xFailMode<br/>			and arrLumgates[iLoop].iOutputLevelFailsave = arrLumgateConfig[iLoop].iOutputLevelFailsave<br/>			and arrLumgates[iLoop].udtCloLed.rPercentage = arrLumgateConfig[iLoop].udtCloLed.rPercentage<br/>			and arrLumgates[iLoop].udtCloLed.udiHours = arrLumgateConfig[iLoop].udtCloLed.udiHours<br/>			and arrLumgates[iLoop].udtCloMaintenance.rPercentage = arrLumgateConfig[iLoop].udtCloMaintenance.rPercentage<br/>			and arrLumgates[iLoop].udtCloMaintenance.udiHours = arrLumgateConfig[iLoop].udtCloMaintenance.udiHours<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageError = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageError<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageWarning = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageWarning then<br/>				For iLoop2 := 1 to 50 do<br/>					If arrLumgates[iLoop].arrDimmingScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 51 then<br/>					xChangedLumgate2	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>
									<br/>				For iLoop2 := 1 to 15 do<br/>					If arrLumgates[iLoop].arrSpecialScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 16 then<br/>					xChangedLumgate2	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>			Elsif not arrLumgates[iLoop].xAvailable then<br/>				iLoop	:=	iLoop;<br/>			Else<br/>				Exit;<br/>			End_if;<br/>		End_for;<br/>		If iLoop &lt; 121 then<br/>			xChangedLumgate2	:=	True;<br/>			iCompare		:=	0;<br/>		Else<br/>			iCompare		:=	9;<br/>		End_if;<br/>
									<br/>	9:	(* Lumgates *)<br/>		xChangedLumgate3	:=	False;<br/>		For iLoop := 121 to 180 do<br/>			If eq_string(arrLumgates[iLoop].strDescription,arrLumgateConfig[iLoop].strDescription)<br/>			and arrLumgates[iLoop].xRelay1_NC = arrLumgateConfig[iLoop].xRelay1_NC<br/>			and arrLumgates[iLoop].xRelay2_NC = arrLumgateConfig[iLoop].xRelay2_NC<br/>			and arrLumgates[iLoop].xFailsaveRelay1 = arrLumgateConfig[iLoop].xFailsaveRelay1<br/>			and arrLumgates[iLoop].xFailsaveRelay2 = arrLumgateConfig[iLoop].xFailsaveRelay2<br/>			and arrLumgates[iLoop].xFailMode = arrLumgateConfig[iLoop].xFailMode<br/>			and arrLumgates[iLoop].iOutputLevelFailsave = arrLumgateConfig[iLoop].iOutputLevelFailsave<br/>			and arrLumgates[iLoop].udtCloLed.rPercentage = arrLumgateConfig[iLoop].udtCloLed.rPercentage<br/>			and arrLumgates[iLoop].udtCloLed.udiHours = arrLumgateConfig[iLoop].udtCloLed.udiHours<br/>			and arrLumgates[iLoop].udtCloMaintenance.rPercentage = arrLumgateConfig[iLoop].udtCloMaintenance.rPercentage<br/>			and arrLumgates[iLoop].udtCloMaintenance.udiHours = arrLumgateConfig[iLoop].udtCloMaintenance.udiHours<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageError = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageError<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageWarning = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageWarning then<br/>				For iLoop2 := 1 to 50 do<br/>					If arrLumgates[iLoop].arrDimmingScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 51 then<br/>					xChangedLumgate3	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>
									<br/>				For iLoop2 := 1 to 15 do<br/>					If arrLumgates[iLoop].arrSpecialScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 16 then<br/>					xChangedLumgate3	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>			Elsif not arrLumgates[iLoop].xAvailable then<br/>				iLoop	:=	iLoop;<br/>			Else<br/>				Exit;<br/>			End_if;<br/>		End_for;<br/>		If iLoop &lt; 181 then<br/>			xChangedLumgate3	:=	True;<br/>			iCompare		:=	0;<br/>		Else<br/>			iCompare		:=	10;<br/>		End_if;<br/>
									<br/>	10:	(* Lumgates *)<br/>		xChangedLumgate4	:=	False;<br/>		For iLoop := 181 to 240 do<br/>			If eq_string(arrLumgates[iLoop].strDescription,arrLumgateConfig[iLoop].strDescription)<br/>			and arrLumgates[iLoop].xRelay1_NC = arrLumgateConfig[iLoop].xRelay1_NC<br/>			and arrLumgates[iLoop].xRelay2_NC = arrLumgateConfig[iLoop].xRelay2_NC<br/>			and arrLumgates[iLoop].xFailsaveRelay1 = arrLumgateConfig[iLoop].xFailsaveRelay1<br/>			and arrLumgates[iLoop].xFailsaveRelay2 = arrLumgateConfig[iLoop].xFailsaveRelay2<br/>			and arrLumgates[iLoop].xFailMode = arrLumgateConfig[iLoop].xFailMode<br/>			and arrLumgates[iLoop].iOutputLevelFailsave = arrLumgateConfig[iLoop].iOutputLevelFailsave<br/>			and arrLumgates[iLoop].udtCloLed.rPercentage = arrLumgateConfig[iLoop].udtCloLed.rPercentage<br/>			and arrLumgates[iLoop].udtCloLed.udiHours = arrLumgateConfig[iLoop].udtCloLed.udiHours<br/>			and arrLumgates[iLoop].udtCloMaintenance.rPercentage = arrLumgateConfig[iLoop].udtCloMaintenance.rPercentage<br/>			and arrLumgates[iLoop].udtCloMaintenance.udiHours = arrLumgateConfig[iLoop].udtCloMaintenance.udiHours<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageError = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageError<br/>			and arrLumgates[iLoop].udtCurrentCheck.rPercentageWarning = arrLumgateConfig[iLoop].udtCurrentCheck.rPercentageWarning then<br/>				For iLoop2 := 1 to 50 do<br/>					If arrLumgates[iLoop].arrDimmingScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrDimmingScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrDimmingScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 51 then<br/>					xChangedLumgate4	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>
									<br/>				For iLoop2 := 1 to 15 do<br/>					If arrLumgates[iLoop].arrSpecialScene[iLoop2].iValue &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].iValue<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xUsed &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xUsed<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay1 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay1<br/>					or arrLumgates[iLoop].arrSpecialScene[iLoop2].xRelay2 &lt;&gt; arrLumgateConfig[iLoop].arrSpecialScene[iLoop2].xRelay2 then<br/>						Exit;<br/>					End_if;<br/>				End_for;<br/>				If iLoop2 &lt; 16 then<br/>					xChangedLumgate4	:=	True;<br/>					iCompare		:=	0;<br/>				End_if;<br/>			Elsif not arrLumgates[iLoop].xAvailable then<br/>				iLoop	:=	iLoop;<br/>			Else<br/>				Exit;<br/>			End_if;<br/>		End_for;<br/>		If iLoop &lt; 241 then<br/>			xChangedLumgate4	:=	True;<br/>		End_if;<br/>		iCompare	:=	0;<br/>End_Case;<br/>
									<br/>(* Create Errors and diagnostic messages *)<br/>R_TRIG_ChangedLumgate(CLK	:=	xChangedLumgate);<br/>R_TRIG_ChangedThreshold1(CLK:=	xChangedThreshold1);<br/>R_TRIG_ChangedThreshold2(CLK:=	xChangedThreshold2);<br/>R_TRIG_ChangedThreshold3(CLK:=	xChangedThreshold3);<br/>R_TRIG_ChangedThreshold4(CLK:=	xChangedThreshold4);<br/>R_TRIG_ChangedNet(CLK		:=	xChangedNetConfig);<br/>R_TRIG_ChangedL20(CLK		:=	xChangedL20Config);<br/>If R_TRIG_ChangedLumgate.Q then<br/>	strDiag			:=	'Lumgate configuration changed';<br/>Elsif R_TRIG_ChangedThreshold1.Q then<br/>	strDiag			:=	'Threshold 1 configuration changed';<br/>Elsif R_TRIG_ChangedThreshold2.Q then<br/>	strDiag			:=	'Threshold 2 configuration changed';<br/>Elsif R_TRIG_ChangedThreshold3.Q then<br/>	strDiag			:=	'Threshold 3 configuration changed';<br/>Elsif R_TRIG_ChangedThreshold4.Q then<br/>	strDiag			:=	'Threshold 4 configuration changed';<br/>Elsif R_TRIG_ChangedNet.Q then<br/>	strDiag			:=	'Network configuration changed';<br/>Elsif R_TRIG_ChangedL20.Q then<br/>	strDiag			:=	'Sensor configuration changed';<br/>End_if;<br/>
									<br/>xChangedLumgate	:=	xChangedLumgate1 or	xChangedLumgate2 or	xChangedLumgate3 or	xChangedLumgate4;<br/>If xChangedLumgate or xChangedThreshold1 or xChangedThreshold2 or xChangedThreshold3 or xChangedThreshold4<br/>or xChangedNetConfig or xChangedL20Config or xCommissioning then<br/>	xPreAlarm	:=	True;<br/>Else<br/>	xPreAlarm	:=	False;<br/>End_if;<br/>Else<br/>	xChangedLumgate		:=	False;<br/>	xChangedLumgate1	:=	False;<br/>	xChangedLumgate2	:=	False;<br/>	xChangedLumgate3	:=	False;<br/>	xChangedLumgate4	:=	False;<br/>	xChangedThreshold1	:=	False;<br/>	xChangedThreshold2	:=	False;<br/>	xChangedThreshold3	:=	False;<br/>	xChangedThreshold4	:=	False;<br/>	xChangedNetConfig	:=	False;<br/>	xChangedL20Config	:=	False;<br/>End_if;<br/>
									<br/>
									<br/>FB_HelpSetIP_01_1(<br/>xActivate				:=	true,<br/>xTakeIP					:=	xExecuteIP_Translate,<br/>arrIP_Address			:=	arrIP_Address,<br/>arrSubnetMask			:=	arrSubnetMask,<br/>arrStdGateway			:=	arrStdGateway,<br/>udtNetworkParameter		:=	udtNetworkConfiguration);<br/>
									<br/>xExecuteIP_Translate	:=	FB_HelpSetIP_01_1.xTakeIP;<br/>arrIP_Address			:=	FB_HelpSetIP_01_1.arrIP_Address;<br/>arrSubnetMask			:=	FB_HelpSetIP_01_1.arrSubnetMask;<br/>arrStdGateway			:=	FB_HelpSetIP_01_1.arrStdGateway;<br/>udtNetworkConfiguration	:=	FB_HelpSetIP_01_1.udtNetworkParameter;<br/>
								</p>
							</html>
						</worksheet>
						<worksheet name="WriteFile">
							<html xmlns="http://www.w3.org/1999/xhtml">
								<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">(* FB_FileHandling / WriteFile *)<br/>If udtConfigFiles.xLumgate and iWriteLumgateConfig = 0 then (* wait for compleating another writting process *)<br/>	udtConfigFiles.xLumgate			:=	False;	(* Reset write trigger *)<br/>	iConfigType						:=	0;		(* Lumgate *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>	xWriteFormatNumber				:=	True;<br/>Elsif udtConfigFiles.xSensor and iWriteLumgateConfig = 0 then<br/>	udtConfigFiles.xSensor			:=	False;<br/>	iConfigType						:=	6;		(* L20 *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>Elsif udtConfigFiles.xThreshold1 and iWriteLumgateConfig = 0 then<br/>	udtConfigFiles.xThreshold1		:=	False;<br/>	iConfigType						:=	1;		(* Threshold 1 *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>Elsif udtConfigFiles.xThreshold2 and iWriteLumgateConfig = 0 then<br/>	udtConfigFiles.xThreshold2		:=	False;<br/>	iConfigType						:=	2;		(* Threshold 2 *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>Elsif udtConfigFiles.xThreshold3 and iWriteLumgateConfig = 0 then<br/>	udtConfigFiles.xThreshold3		:=	False;<br/>	iConfigType						:=	3;		(* Threshold 3 *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>Elsif udtConfigFiles.xThreshold4 and iWriteLumgateConfig = 0 then<br/>	udtConfigFiles.xThreshold4		:=	False;<br/>	iConfigType						:=	4;		(* Threshold 4 *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>Elsif udtConfigFiles.xNetwork and iWriteLumgateConfig = 0 then<br/>	udtConfigFiles.xNetwork			:=	False;<br/>	iConfigType						:=	5;		(* Network *)<br/>	xWriteFile						:=	False;<br/>	xRequestWritingLumgateConfig	:=	True;<br/>End_If;<br/>
									<br/>Case iWriteLumgateConfig of<br/>
									<br/>	0:	(* Wait for write trigger *)<br/>		If xRequestWritingLumgateConfig then<br/>			iTempPointer		:=	0;	(* e.g. Lumgate no. *)<br/>			iWriteLumgateConfig	:=	100;<br/>			iTable				:=	0;	<br/>		End_If;<br/>
									<br/>	100:	(* Open / Create File *)<br/>		 If not udtFileHandler.xRequest then<br/>				udtFileHandler.xRequest			:=	True;<br/>				udtFileHandler.iTasktype		:=	2;		(* Remove old file	*)<br/>				iWriteLumgateConfig				:=	101;	(* Name of the file *)<br/>															(*		|			*)<br/>		 	If iConfigType = 0 then 						(*		V			*)<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_Lumgate_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_Lumgate_Configuration_1.csv"';<br/>			Elsif iConfigType = 1 then<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_1_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_Threshold_1_Configuration_1.csv"';<br/>			Elsif iConfigType = 2 then<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_2_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_Threshold_2_Configuration_1.csv"';<br/>			Elsif iConfigType = 3 then<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_3_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_Threshold_3_Configuration_1.csv"';<br/>			Elsif iConfigType = 4 then<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_4_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_Threshold_4_Configuration_1.csv"';<br/>			Elsif iConfigType = 5 then<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_Network_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_Network_Configuration_1.csv"';<br/>			Elsif iConfigType = 6 then<br/>				udtFileHandler.strFileNameTarget	:=	'ATS_L20_Configuration_1.csv';<br/>				strDiag								:=	'Write file "ATS_L20_Configuration_1.csv"';<br/>			End_if;<br/>		End_If;<br/>
									<br/>	101:	(* Select which data should be written *)<br/>		 If not udtFileHandler.xRequest then<br/>		 	If iConfigType = 0 then<br/>				iWriteLumgateConfig	:=	1;			(* Lumgate Config File *)<br/>			Elsif iConfigType = 1 then<br/>				iWriteLumgateConfig	:=	1001;		(* Threshold 1 Config File *)<br/>			Elsif iConfigType = 2 then<br/>				iWriteLumgateConfig	:=	2001; 		(* Threshold 2 Config File *)<br/>			Elsif iConfigType = 3 then<br/>				iWriteLumgateConfig	:=	3001;		(* Threshold 3 Config File *)<br/>			Elsif iConfigType = 4 then<br/>				iWriteLumgateConfig	:=	4001;		(* Threshold 4 Config File *)<br/>			Elsif iConfigType = 5 then<br/>				iWriteLumgateConfig	:=	5002;		(* Network Config File *)<br/>			Elsif iConfigType = 6 then<br/>				iWriteLumgateConfig	:=	6002;		(* L20 Config File *)<br/>			End_if;<br/>		End_If;<br/>		<br/>	1:		(* Lumgate counter *)<br/>		iTempPointer			:=	iTempPointer + 1;<br/>		If arrLumgates[iTempPointer].xInConfigFile and not xTakeActualConfig then	(* Write data of all configured Lumgates *)<br/>			iWriteLumgateConfig	:=	2;<br/>		Elsif arrLumgates[iTempPointer].xAvailable and xTakeActualConfig then		(* Write data of all available Lumgates *)<br/>			iWriteLumgateConfig	:=	2;<br/>			arrSegment[1]	:=	0;		(* Reset expected Lumgate counter *)<br/>			arrSegment[2]	:=	0;<br/>			arrSegment[3]	:=	0;<br/>			arrSegment[4]	:=	0;<br/>			For iLoop := 1 to 240 do	(* Fill expected Lumgate counter *)<br/>				arrLumgates[iLoop].xInConfigFile	:=	False;<br/>				If arrLumgates[iLoop].xAvailable then<br/>					If arrLumgates[iLoop].iModuleLevel = 0 then<br/>						arrSegment[1]	:=	arrSegment[1] + 1;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 1 then<br/>						arrSegment[2]	:=	arrSegment[2] + 1;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 2 then<br/>						arrSegment[3]	:=	arrSegment[3] + 1;<br/>					Elsif arrLumgates[iLoop].iModuleLevel = 3 then<br/>						arrSegment[4]	:=	arrSegment[4] + 1;<br/>					End_if;<br/>				End_if;<br/>			End_for;<br/>		Elsif iTempPointer = 240 then<br/>			iWriteLumgateConfig	:=	11;<br/>		Else<br/>			arrLumgates[iTempPointer].iModuleLevel			:=	0;<br/>			arrLumgates[iTempPointer].iModuleNumberGeneral	:=	0;<br/>			arrLumgates[iTempPointer].iModuleNumber			:=	0;<br/>			arrLumgates[iTempPointer].xAvailable			:=	False;<br/>			arrLumgates[iTempPointer].xInConfigFile			:=	False;<br/>		End_If;<br/>	<br/>	1001:	(* Threshold 1 counter *)<br/>		iTempPointer			:=	iTempPointer + 1;<br/>		iWriteLumgateConfig		:=	1002;<br/>
									<br/>	2001:	(* Threshold 2 counter *)<br/>		iTempPointer			:=	iTempPointer + 1;<br/>		iWriteLumgateConfig		:=	2002;<br/>
									<br/>
									<br/>	3001:	(* Threshold 3 counter *)<br/>		iTempPointer			:=	iTempPointer + 1;<br/>		iWriteLumgateConfig		:=	3002;<br/>
									<br/>
									<br/>	4001:	(* Threshold 4 counter *)<br/>		iTempPointer			:=	iTempPointer + 1;<br/>		iWriteLumgateConfig		:=	4002;<br/>
									<br/>
									<br/>	2:	(* Lumgate config file *)<br/>		sModuleLevel	:=	Int_To_String((arrLumgates[iTempPointer].iModuleLevel + 1),'%01d');<br/>		sModuleNumber	:=	Int_To_String(arrLumgates[iTempPointer].iModuleNumber,'%01d');<br/>
									<br/>		(*	V2.01 changes: Include file format EPO-IS-268-917 *)<br/>		If xWriteFormatNumber then<br/>			xWriteFormatNumber	:=	False;<br/>			strTempText			:=	'File format version;2';<br/>			strTempText			:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText			:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText			:=	concat(strTempText,sModuleLevel);<br/>		Else<br/>			strTempText	:=	sModuleLevel;<br/>		End_if;<br/>
									<br/>		(* Lumgate address X-YYY *)<br/>		strTempText	:=	Concat(strTempText,'-');<br/>		strTempText	:=	Concat(strTempText,sModuleNumber);<br/>		strTempText	:=	Concat(strTempText,';');<br/>		If eq_string(arrLumgates[iTempPointer].strDescription,'') then<br/>			arrLumgates[iTempPointer].strDescription	:=	'no description';<br/>		End_if;<br/>		strTempText	:=	Concat(strTempText,arrLumgates[iTempPointer].strDescription);<br/>		strTempText	:=	Concat(strTempText,';');<br/>
									<br/>		If arrLumgates[iTempPointer].xFailMode then<br/>			strTempText	:=	Concat(strTempText,'1;');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;');<br/>		End_If;<br/>
									<br/>		strTempInfo	:=	Int_To_String(arrLumgates[iTempPointer].iOutputLevelFailsave,'%01d');<br/>		strTempText	:=	Concat(strTempText,strTempInfo);<br/>		strTempText	:=	Concat(strTempText,';');<br/>
									<br/>		(*	V2.01 changes: Include failsafe relay states EPO-IS-268-917 *)<br/>		If arrLumgates[iTempPointer].xFailsaveRelay1 then<br/>			strTempText	:=	Concat(strTempText,'1;');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;');<br/>		End_If;<br/>
									<br/>		If arrLumgates[iTempPointer].xFailsaveRelay2 then<br/>			strTempText	:=	Concat(strTempText,'1;');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;');<br/>		End_If;<br/>
									<br/>		(*	V2.01 changes: Include relay options EPO-IS-268-917 *)<br/>		If arrLumgates[iTempPointer].xRelay1_NC then<br/>			strTempText	:=	Concat(strTempText,'1;');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;');<br/>		End_If;<br/>
									<br/>		If arrLumgates[iTempPointer].xRelay2_NC then<br/>			strTempText	:=	Concat(strTempText,'1;');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;');<br/>		End_If;<br/>
									<br/>		(* CLO LED *)<br/>		If arrLumgates[iTempPointer].udtCloLed.xActive then<br/>			strTempInfo	:=	Udint_To_String(arrLumgates[iTempPointer].udtCloLed.udiHours,'%01u');<br/>			strTempText	:=	Concat(strTempText,strTempInfo);<br/>			strTempText	:=	Concat(strTempText,';');<br/>			strTempInfo	:=	Real_To_String(arrLumgates[iTempPointer].udtCloLed.rPercentage,'%03.1f');<br/>			strTempText	:=	Concat(strTempText,strTempInfo);<br/>			strTempText	:=	Concat(strTempText,';');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;0.0;');<br/>		End_If;<br/>
									<br/>		(* CLO Maintenance *)<br/>		If arrLumgates[iTempPointer].udtCloMaintenance.xActive then<br/>			strTempInfo	:=	Udint_To_String(arrLumgates[iTempPointer].udtCloMaintenance.udiHours,'%01u');<br/>			strTempText	:=	Concat(strTempText,strTempInfo);<br/>			strTempText	:=	Concat(strTempText,';');<br/>			strTempInfo	:=	Real_To_String(arrLumgates[iTempPointer].udtCloMaintenance.rPercentage,'%03.1f');<br/>			strTempText	:=	Concat(strTempText,strTempInfo);<br/>			strTempText	:=	Concat(strTempText,';');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0;0.0;');<br/>		End_If;<br/>
									<br/>		(* Current check "Warning" *)<br/>		If arrLumgates[iTempPointer].udtCurrentCheck.xActiveCurrentCheckWarning then<br/>			strTempInfo	:=	Real_To_String(arrLumgates[iTempPointer].udtCurrentCheck.rPercentageWarning,'%03.1f');<br/>			strTempText	:=	Concat(strTempText,strTempInfo);<br/>			strTempText	:=	Concat(strTempText,';');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0.0;');<br/>		End_If;<br/>
									<br/>		(* Current check "Error" *)<br/>		If arrLumgates[iTempPointer].udtCurrentCheck.xActiveCurrentCheckError then<br/>			strTempInfo	:=	Real_To_String(arrLumgates[iTempPointer].udtCurrentCheck.rPercentageError,'%03.1f');<br/>			strTempText	:=	Concat(strTempText,strTempInfo);<br/>			strTempText	:=	Concat(strTempText,';');<br/>		Else<br/>			strTempText	:=	Concat(strTempText,'0.0;');<br/>		End_If;<br/>
									<br/>		For iLoop := 1 to 50 do<br/>			If arrLumgates[iTempPointer].arrDimmingScene[iLoop].xUsed then<br/>				strTempInfo	:=	Int_To_String(arrLumgates[iTempPointer].arrDimmingScene[iLoop].iValue,'%01d');<br/>				strTempText	:=	Concat(strTempText,strTempInfo);<br/>
									<br/>				(*	V2.01 changes: Include relay states EPO-IS-268-917 *)<br/>				If arrLumgates[iTempPointer].arrDimmingScene[iLoop].xRelay1 then<br/>					strTempText	:=	Concat(strTempText,';1');<br/>				Else<br/>					strTempText	:=	Concat(strTempText,';0');<br/>				End_If;<br/>				If arrLumgates[iTempPointer].arrDimmingScene[iLoop].xRelay2 then<br/>					strTempText	:=	Concat(strTempText,';1');<br/>				Else<br/>					strTempText	:=	Concat(strTempText,';0');<br/>				End_If;<br/>			Else<br/>				strTempText	:=	Concat(strTempText,'X;X;X');	(* Enter "X" for unused scenes and special scenes *)<br/>			End_If;<br/>						<br/>			If iLoop &lt; 50 then<br/>				strTempText	:=	Concat(strTempText,';');<br/>			Else<br/>				strTempText	:=	Concat(strTempText,'&amp;');	(* Seperator between scenes and special scenes *)<br/>			End_If;<br/>		End_For;<br/>					<br/>		For iLoop := 1 to 15 do<br/>			If arrLumgates[iTempPointer].arrSpecialScene[iLoop].xUsed then<br/>				strTempInfo	:=	Int_To_String(arrLumgates[iTempPointer].arrSpecialScene[iLoop].iValue,'%01d');<br/>				strTempText	:=	Concat(strTempText,strTempInfo);<br/>				<br/>				(*	V2.01 changes: Include relay states EPO-IS-268-917 *)<br/>				If arrLumgates[iTempPointer].arrSpecialScene[iLoop].xRelay1 then<br/>					strTempText	:=	Concat(strTempText,';1');<br/>				Else<br/>					strTempText	:=	Concat(strTempText,';0');<br/>				End_If;<br/>				If arrLumgates[iTempPointer].arrSpecialScene[iLoop].xRelay2 then<br/>					strTempText	:=	Concat(strTempText,';1');<br/>				Else<br/>					strTempText	:=	Concat(strTempText,';0');<br/>				End_If;<br/>			Else<br/>				strTempText	:=	Concat(strTempText,'X;X;X');<br/>			End_If;<br/>					<br/>			If iLoop &lt; 15 then<br/>				strTempText	:=	Concat(strTempText,';');<br/>			End_If;<br/>		End_For;<br/>	<br/>		iWriteLumgateConfig	:=	3;<br/>		iLenght				:=	Len(strTempText);<br/>
									<br/>	1002:	(* Threshold config file 1 *)<br/>		If iTempPointer = 1 then<br/>			strTempText	:=	concat('Name:;',udtProjectDescription.strName);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Description:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDescription);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Location:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strLocation);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Designer:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDesigner);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Revision:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strRevision);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Delay:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.iDelay,'%02d'));<br/>			iDelay		:=	udtLevelConfiguration_L20_1.iDelay;<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Sensor Value:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.iInputValue,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			iCounter	:=	0;<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_1.arrScenarioActive[iLoop] then<br/>					iCounter	:=	iCounter + 1;<br/>				End_if;<br/>			End_for;<br/>			strTempText	:=	concat(strTempText,'Active levels:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(iCounter,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>		If iTempPointer = 25 then 	(* Scene options *)<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][5],'%02d'));<br/>		Elsif iTempPointer = 1 then	(* Scene options *)<br/>			strTempText	:=	concat(strTempText,int_to_string(iTempPointer,'%02d'));<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');	(* Thresholds *)<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		Else						(* Scene options *)<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_1[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');	(* Thresholds *)<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_1.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>
									<br/>		iWriteLumgateConfig	:=	3;<br/>		iLenght				:=	Len(strTempText);<br/>
									<br/>	2002:	(* Threshold config file 2 *)<br/>		If iTempPointer = 1 then<br/>			strTempText	:=	concat('Name:;',udtProjectDescription.strName);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Description:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDescription);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Location:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strLocation);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Designer:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDesigner);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Revision:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strRevision);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Delay:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.iDelay,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Sensor Value:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.iInputValue,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			iCounter	:=	0;<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_2.arrScenarioActive[iLoop] then<br/>					iCounter	:=	iCounter + 1;<br/>				End_if;<br/>			End_for;<br/>			strTempText	:=	concat(strTempText,'Active levels:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(iCounter,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>		If iTempPointer = 25 then<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][5],'%02d'));<br/>		Elsif iTempPointer = 1 then<br/>			strTempText	:=	concat(strTempText,int_to_string(iLoop,'%02d'));<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		Else<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_2[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_2.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>
									<br/>		iWriteLumgateConfig	:=	3;<br/>		iLenght				:=	Len(strTempText);<br/>
									<br/>	3002:	(* Threshold config file 3 *)<br/>		If iTempPointer = 1 then<br/>			strTempText	:=	concat('Name:;',udtProjectDescription.strName);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Description:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDescription);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Location:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strLocation);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Designer:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDesigner);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Revision:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strRevision);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Delay:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.iDelay,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Sensor Value:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.iInputValue,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			iCounter	:=	0;<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_3.arrScenarioActive[iLoop] then<br/>					iCounter	:=	iCounter + 1;<br/>				End_if;<br/>			End_for;<br/>			strTempText	:=	concat(strTempText,'Active levels:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(iCounter,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>		If iTempPointer = 25 then<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][5],'%02d'));<br/>		Elsif iTempPointer = 1 then<br/>			strTempText	:=	concat(strTempText,int_to_string(iTempPointer,'%02d'));<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		Else<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_3[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_3.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>
									<br/>		iWriteLumgateConfig	:=	3;<br/>		iLenght				:=	Len(strTempText);<br/>
									<br/>	4002:	(* Threshold config file 4 *)<br/>		If iTempPointer = 1 then<br/>			strTempText	:=	concat('Name:;',udtProjectDescription.strName);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Description:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDescription);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Location:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strLocation);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Designer:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strDesigner);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Revision:;');<br/>			strTempText	:=	concat(strTempText,udtProjectDescription.strRevision);<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Delay:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.iDelay,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,'Sensor Value:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.iInputValue,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			iCounter	:=	0;<br/>			For iLoop := 1 to 25 do<br/>				If udtLevelConfiguration_L20_4.arrScenarioActive[iLoop] then<br/>					iCounter	:=	iCounter + 1;<br/>				End_if;<br/>			End_for;<br/>			strTempText	:=	concat(strTempText,'Active levels:;');<br/>			strTempText	:=	concat(strTempText,int_to_string(iCounter,'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>		If iTempPointer = 25 then<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][5],'%02d'));<br/>		Elsif iTempPointer = 1 then<br/>			strTempText	:=	concat(strTempText,int_to_string(iTempPointer,'%02d'));<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		Else<br/>			strTempText	:=	int_to_string(iTempPointer,'%02d');<br/>			strTempText	:=	concat(strTempText,';;;;;');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][1],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][2],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][3],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][4],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(arrScenarioConfiguration_L20_4[iTempPointer][5],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig1[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig2[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig3[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText,';');<br/>			strTempText	:=	concat(strTempText,int_to_string(udtLevelConfiguration_L20_4.arrScenarioConfig4[iTempPointer],'%02d'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>			strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		End_if;<br/>
									<br/>		iWriteLumgateConfig	:=	3;<br/>		iLenght				:=	Len(strTempText);<br/>
									<br/>	5002:	(* Network config *)<br/>		udtNetworkConfiguration.strIP		:=	byte_to_string(arrActIP_Address[1], '%u');<br/>		udtNetworkConfiguration.strIP		:=	concat(udtNetworkConfiguration.strIP,'.');<br/>		udtNetworkConfiguration.strIP		:=	concat(udtNetworkConfiguration.strIP, byte_to_string(arrActIP_Address[2], '%u'));<br/>		udtNetworkConfiguration.strIP		:=	concat(udtNetworkConfiguration.strIP,'.');<br/>		udtNetworkConfiguration.strIP		:=	concat(udtNetworkConfiguration.strIP, byte_to_string(arrActIP_Address[3], '%u'));<br/>		udtNetworkConfiguration.strIP		:=	concat(udtNetworkConfiguration.strIP,'.');<br/>		udtNetworkConfiguration.strIP		:=	concat(udtNetworkConfiguration.strIP, byte_to_string(arrActIP_Address[4], '%u'));<br/>		strTempText							:=	concat('IP:;',	udtNetworkConfiguration.strIP);<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		strTempText							:=	concat(strTempText,'Subnet:;');<br/>		udtNetworkConfiguration.strSubnet	:=	byte_to_string(arrActSubnetMask[1], '%u');<br/>		udtNetworkConfiguration.strSubnet	:=	concat(udtNetworkConfiguration.strSubnet,'.');<br/>		udtNetworkConfiguration.strSubnet	:=	concat(udtNetworkConfiguration.strSubnet, byte_to_string(arrActSubnetMask[2], '%u'));<br/>		udtNetworkConfiguration.strSubnet	:=	concat(udtNetworkConfiguration.strSubnet,'.');<br/>		udtNetworkConfiguration.strSubnet	:=	concat(udtNetworkConfiguration.strSubnet, byte_to_string(arrActSubnetMask[3], '%u'));<br/>		udtNetworkConfiguration.strSubnet	:=	concat(udtNetworkConfiguration.strSubnet,'.');<br/>		udtNetworkConfiguration.strSubnet	:=	concat(udtNetworkConfiguration.strSubnet, byte_to_string(arrActSubnetMask[4], '%u'));<br/>		strTempText							:=	concat(strTempText, udtNetworkConfiguration.strSubnet);<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		strTempText							:=	concat(strTempText,'Gateway:;');<br/>		udtNetworkConfiguration.strGateway	:=	byte_to_string(arrActStdGateway[1], '%u');<br/>		udtNetworkConfiguration.strGateway	:=	concat(udtNetworkConfiguration.strGateway,'.');<br/>		udtNetworkConfiguration.strGateway	:=	concat(udtNetworkConfiguration.strGateway, byte_to_string(arrActStdGateway[2], '%u'));<br/>		udtNetworkConfiguration.strGateway	:=	concat(udtNetworkConfiguration.strGateway,'.');<br/>		udtNetworkConfiguration.strGateway	:=	concat(udtNetworkConfiguration.strGateway, byte_to_string(arrActStdGateway[3], '%u'));<br/>		udtNetworkConfiguration.strGateway	:=	concat(udtNetworkConfiguration.strGateway,'.');<br/>		udtNetworkConfiguration.strGateway	:=	concat(udtNetworkConfiguration.strGateway, byte_to_string(arrActStdGateway[4], '%u'));<br/>		strTempText							:=	concat(strTempText, udtNetworkConfiguration.strGateway);<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		strTempText							:=	concat(strTempText,'IP Modbus:;');<br/>		strTempText							:=	concat(strTempText,udtNetworkConfiguration.strIPModbus);<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		strTempText							:=	concat(strTempText,'Working Mode:;');<br/>		strTempText							:=	concat(strTempText,int_to_string(udtNetworkConfiguration.iMode,'%01d'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		strTempText							:=	concat(strTempText,'DNS Name:;');<br/>		strTempText							:=	concat(strTempText,udtNetworkConfiguration.strDNS);<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText							:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		strTempText							:=	concat(strTempText,'Lumgate Type:;');<br/>		strTempText							:=	concat(strTempText,int_to_string(bool_to_int(udtNetworkConfiguration.xLumgateType),'%01d')); <br/>
									<br/>		xExecuteIP_Translate				:=	true;<br/>		iWriteLumgateConfig					:=	3;<br/>		iLenght								:=	Len(strTempText);<br/>
									<br/>	6002:	(* Sensor config *)<br/>		If arr_Inputs_L20[1].xActive then<br/>			strTempText	:=	'Sensor channel 1: 1';<br/>		Else<br/>			strTempText	:=	'Sensor channel 1: 0';<br/>		End_if;<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		If arr_Inputs_L20[2].xActive then<br/>			strTempText	:=	concat(strTempText,'Sensor channel 2: 1');<br/>		Else<br/>			strTempText	:=	concat(strTempText,'Sensor channel 2: 0');<br/>		End_if;<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		If arr_Inputs_L20[3].xActive then<br/>			strTempText	:=	concat(strTempText,'Sensor channel 3: 1');<br/>		Else<br/>			strTempText	:=	concat(strTempText,'Sensor channel 3: 0');<br/>		End_if;<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>		If arr_Inputs_L20[4].xActive then<br/>			strTempText	:=	concat(strTempText,'Sensor channel 4: 1');<br/>		Else<br/>			strTempText	:=	concat(strTempText,'Sensor channel 4: 0');<br/>		End_if;<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Sensor channel 1 max. Cd/m2 value: ');<br/>		strTempText	:=	concat(strTempText,udint_to_string(real_to_udint(udtL20Config.rMaxCd1) ,'%06u'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Sensor channel 2 max. Cd/m2 value: ');<br/>		strTempText	:=	concat(strTempText,udint_to_string(real_to_udint(udtL20Config.rMaxCd2) ,'%06u'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Sensor channel 3 max. Cd/m2 value: ');<br/>		strTempText	:=	concat(strTempText,udint_to_string(real_to_udint(udtL20Config.rMaxCd3) ,'%06u'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Sensor channel 4 max. Cd/m2 value: ');<br/>		strTempText	:=	concat(strTempText,udint_to_string(real_to_udint(udtL20Config.rMaxCd4) ,'%06u'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Limit backup sequence 1_2_3_4: ');<br/>		strTempText	:=	concat(strTempText,int_to_string(udtL20Config.iBackup_1_2_3_4_Limit,'%02d'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Limit backup sequence 2_3_4_1: ');<br/>		strTempText	:=	concat(strTempText,int_to_string(udtL20Config.iBackup_2_3_4_1_Limit,'%02d'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Limit backup sequence 3_4_1_2_: ');<br/>		strTempText	:=	concat(strTempText,int_to_string(udtL20Config.iBackup_3_4_1_2_Limit,'%02d'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		strTempText	:=	concat(strTempText,'Limit backup sequence 4_1_2_3_: ');<br/>		strTempText	:=	concat(strTempText,int_to_string(udtL20Config.iBackup_4_1_2_3_Limit,'%02d'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#13, '%c'));<br/>		strTempText	:=	concat(strTempText, byte_to_string(byte#10, '%c'));<br/>
									<br/>		iWriteLumgateConfig	:=	3;<br/>		iLenght				:=	Len(strTempText);<br/>
									<br/>	3:	(* Wait for file handler *)<br/>		If not udtFileHandler.xRequest then<br/>			xPartLeft			:=	False;<br/>			iWriteLumgateConfig	:=	4;<br/>		End_If;<br/>	<br/>	4:	(* fill buffer *)<br/>		For iLoop := 1 to iLenght do<br/>			arrFBuffer[iBufferPosition]	:=	Int_To_Byte(Get_Char(strTempText,iLoop));<br/>
									<br/>			iBufferPosition				:=	iBufferPosition + 1;<br/>			If iBufferPosition &gt; 4998 then (* Max buffer size - CR and LF *)<br/>				iWriteLumgateConfig		:=	5;<br/>				iPositionActuelText		:=	iLoop;<br/>				xPartLeft				:=	True;	(* write a part *)<br/>				Exit;<br/>			End_If;<br/>		End_For;<br/>		If not xPartLeft then (* Next line *)<br/>			iWriteLumgateConfig	:=	10;<br/>		End_If;<br/>	<br/>	5:	(* Lumgate information *)<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_Lumgate_Configuration_1.csv';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>		<br/>		(* update compare dataset *)<br/>		For iLoop := 1 to 240 do<br/>			If xTakeActualConfig then<br/>				arrLumgates[iLoop].xInConfigFile				:=	arrLumgates[iLoop].xAvailable;<br/>			End_if;<br/>			arrLumgateConfig[iLoop].arrDimmingScene			:=	arrLumgates[iLoop].arrDimmingScene;<br/>			arrLumgateConfig[iLoop].arrSpecialScene			:=	arrLumgates[iLoop].arrSpecialScene;<br/>			arrLumgateConfig[iLoop].iOutputLevelFailsave	:=	arrLumgates[iLoop].iOutputLevelFailsave;<br/>			arrLumgateConfig[iLoop].strDescription 			:=	arrLumgates[iLoop].strDescription;<br/>			arrLumgateConfig[iLoop].udtCloLed 				:=	arrLumgates[iLoop].udtCloLed;<br/>			arrLumgateConfig[iLoop].udtCloMaintenance		:=	arrLumgates[iLoop].udtCloMaintenance;<br/>			arrLumgateConfig[iLoop].udtCurrentCheck			:=	arrLumgates[iLoop].udtCurrentCheck;<br/>			arrLumgateConfig[iLoop].xFailMode				:=	arrLumgates[iLoop].xFailMode;<br/>			arrLumgateConfig[iLoop].xFailsaveRelay1			:=	arrLumgates[iLoop].xFailsaveRelay1;<br/>			arrLumgateConfig[iLoop].xFailsaveRelay2			:=	arrLumgates[iLoop].xFailsaveRelay2;<br/>			arrLumgateConfig[iLoop].xRelay1_NC				:=	arrLumgates[iLoop].xRelay1_NC;<br/>			arrLumgateConfig[iLoop].xRelay2_NC				:=	arrLumgates[iLoop].xRelay2_NC;<br/>
									<br/>		End_for;<br/>		xChangedLumgateFileExist			:=	True;<br/>		xLumgateConfigFileExist				:=	False;<br/>
									<br/>	1005:<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_1_Configuration_1.csv';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>
									<br/>		(* update compare dataset *)<br/>		udtActThresholdConfig1				:=	udtLevelConfiguration_L20_1;<br/>		arrActScenarioConfig_L20_1			:=	arrScenarioConfiguration_L20_1;<br/>		xChangedThreshold1FileExist			:=	True;<br/>		xThreshold1ConfigFileExist			:=	False;<br/>
									<br/>	2005:<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_2_Configuration_1.csv';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>
									<br/>		(* update compare dataset *)<br/>		udtActThresholdConfig2				:=	udtLevelConfiguration_L20_2;<br/>		arrActScenarioConfig_L20_2			:=	arrScenarioConfiguration_L20_2;<br/>		xChangedThreshold2FileExist			:=	True;<br/>		xThreshold2ConfigFileExist			:=	False;<br/>
									<br/>	3005:<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_3_Configuration_1.csv';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>
									<br/>		(* update compare dataset *)<br/>		udtActThresholdConfig3				:=	udtLevelConfiguration_L20_3;<br/>		arrActScenarioConfig_L20_3			:=	arrScenarioConfiguration_L20_3;<br/>		xChangedThreshold3FileExist			:=	True;<br/>		xThreshold3ConfigFileExist			:=	False;<br/>
									<br/>	4005:<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_Threshold_4_Configuration_1.csv';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>
									<br/>		(* update compare dataset *)<br/>		udtActThresholdConfig4				:=	udtLevelConfiguration_L20_4;<br/>		arrActScenarioConfig_L20_4			:=	arrScenarioConfiguration_L20_4;<br/>		xChangedThreshold4FileExist			:=	True;<br/>		xThreshold4ConfigFileExist			:=	False;<br/>
									<br/>	5005:<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_Network_Configuration_1.csv';<br/>		strDiag								:=	'File "ATS_Network_Configuration_1.csv" was written';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>
									<br/>		(* update compare dataset *)<br/>		udtActNetworkConfiguration			:=	udtNetworkConfiguration;<br/>		xChangedNetFileExist				:=	True;<br/>		xNetworkConfigFileExist				:=	False;<br/>
									<br/>	6005:<br/>		udtFileHandler.iAmountOverwriteChar	:=	0;<br/>		udtFileHandler.udiAmountData		:=	Int_To_Udint(iBufferPosition - 1);<br/>		udtFileHandler.iTasktype			:=	0;<br/>		udtFileHandler.strFileNameTarget	:=	'ATS_L20_Configuration_1.csv';<br/>		strDiag								:=	'File "ATS_L20_Configuration_1.csv" was written';<br/>		udtFileHandler.xRequest				:=	True;<br/>		iWriteLumgateConfig					:=	6;<br/>
									<br/>		(* update compare dataset *)<br/>		arrActL20Inputs						:=	arr_Inputs_L20;<br/>		udtActL20Config						:=	udtL20Config;<br/>		xChangedL20FileExist				:=	True;<br/>		xL20ConfigFileExist					:=	False;<br/>
									<br/>	6:<br/>		If TON_Delay_Write.Q then<br/>			iWriteLumgateConfig	:=	7;<br/>		End_If;<br/>	<br/>	7:<br/>		If not udtFileHandler.xRequest then<br/>			For iLoop := 0 to 5000 do<br/>				arrFBuffer[iLoop] := Byte#0;<br/>			End_For;<br/>		End_If;<br/>		iBufferPosition	:=	0;<br/>
									<br/>		If xPartLeft then (* Continue with the existing text *)<br/>
									<br/>		(*	iPositionActuelText	:=	iPositionActuelText + 1;*)<br/>			For iLoop := iPositionActuelText to iLenght do<br/>				arrFBuffer[iBufferPosition]	:=	Int_To_Byte(Get_Char(strTempText,iLoop));<br/>				iBufferPosition				:=	iBufferPosition + 1;<br/>			End_For;<br/>			iPositionActuelText	:=	0;<br/>			xPartLeft			:=	False;<br/>		End_If;<br/>
									<br/>		If iTempPointer &lt; 241 then<br/>			iWriteLumgateConfig	:=	10;<br/>		Else<br/>			iTempPointer		:=	0;<br/>			iWriteLumgateConfig	:=	11;<br/>			strDiag				:=	'File "ATS_Lumgate_Configuration_1.csv" was written';<br/>			xTakeActualConfig	:=	False;<br/>		End_If;<br/>		If iConfigType &gt; 4 then<br/>			iTempPointer		:=	0;<br/>			iWriteLumgateConfig	:=	11;<br/>			xTakeActualConfig	:=	False;<br/>		End_if;<br/>			<br/>	10:<br/>		arrFBuffer[iBufferPosition]	:=	Byte#16#D;<br/>		iBufferPosition				:=	iBufferPosition + 1;<br/>		arrFBuffer[iBufferPosition]	:=	Byte#16#A;<br/>		iBufferPosition				:=	iBufferPosition + 1;<br/>
									<br/>		If iConfigType = 0 then<br/>			iTempPointer	:=	iTempPointer + 1;<br/>			If iTempPointer &lt; 241 then<br/>
									<br/>				If arrLumgates[iTempPointer].xInConfigFile and not xTakeActualConfig then<br/>					iWriteLumgateConfig		:=	2;<br/>				Elsif arrLumgates[iTempPointer].xAvailable and xTakeActualConfig then<br/>					arrLumgates[iTempPointer].xInConfigFile	:=	True;<br/>					iWriteLumgateConfig		:=	2;<br/>				Elsif iTempPointer = 240 then<br/>					If iBufferPosition = 2 then (* No extra data anymore *)<br/>						iWriteLumgateConfig	:=	11;<br/>						strDiag				:=	'File "ATS_Lumgate_Configuration_1.csv" was written';<br/>						xTakeActualConfig	:=	False;<br/>					Else<br/>						iWriteLumgateConfig	:=	5;<br/>					End_If;<br/>				Else<br/>					iBufferPosition									:=	iBufferPosition - 2;<br/>					arrLumgates[iTempPointer].iModuleLevel			:=	0;<br/>					arrLumgates[iTempPointer].iModuleNumberGeneral	:=	0;<br/>					arrLumgates[iTempPointer].iModuleNumber			:=	0;<br/>					arrLumgates[iTempPointer].xAvailable			:=	False;<br/>					arrLumgates[iTempPointer].xInConfigFile			:=	False;<br/>				End_If;<br/>			Else<br/>				If iBufferPosition = 2 then (* No extra data anymore *)<br/>					iWriteLumgateConfig	:=	11;<br/>					strDiag				:=	'File "ATS_Lumgate_Configuration_1.csv" was written';<br/>					xTakeActualConfig	:=	False;<br/>				Else<br/>					iWriteLumgateConfig	:=	5;<br/>				End_If;<br/>			End_If;<br/>		Elsif iConfigType = 1 then<br/>			iTempPointer	:=	iTempPointer + 1;<br/>			If iTempPointer &lt; 26 then<br/>				iWriteLumgateConfig	:=	1002;<br/>			Else<br/>				If iBufferPosition = 2 then (* No extra data anymore *)<br/>					strDiag				:=	'File "ATS_Threshold_1_Configuration_1.csv" was written';<br/>					iWriteLumgateConfig	:=	11;<br/>				Else<br/>					iWriteLumgateConfig	:=	1005;<br/>				End_If;<br/>			End_If;<br/>		Elsif iConfigType = 2 then<br/>			iTempPointer	:=	iTempPointer + 1;<br/>			If iTempPointer &lt; 26 then<br/>				iWriteLumgateConfig	:=	2002;<br/>			Else<br/>				If iBufferPosition = 2 then (* No extra data anymore *)<br/>					strDiag				:=	'File "ATS_Threshold_2_Configuration_1.csv" was written';<br/>					iWriteLumgateConfig	:=	11;<br/>				Else<br/>					iWriteLumgateConfig	:=	2005;<br/>				End_If;<br/>			End_If;<br/>		Elsif iConfigType = 3 then<br/>			iTempPointer	:=	iTempPointer + 1;<br/>			If iTempPointer &lt; 26 then<br/>				iWriteLumgateConfig	:=	3002;<br/>			Else<br/>				If iBufferPosition = 2 then (* No extra data anymore *)<br/>					strDiag				:=	'File "ATS_Threshold_3_Configuration_1.csv" was written';<br/>					iWriteLumgateConfig	:=	11;<br/>				Else<br/>					iWriteLumgateConfig	:=	3005;<br/>				End_If;<br/>			End_If;<br/>		Elsif iConfigType = 4 then<br/>			iTempPointer	:=	iTempPointer + 1;<br/>			If iTempPointer &lt; 26 then<br/>				iWriteLumgateConfig	:=	4002;<br/>			Else<br/>				If iBufferPosition = 2 then (* No extra data anymore *)<br/>					strDiag				:=	'File "ATS_Threshold_4_Configuration_1.csv" was written';<br/>					iWriteLumgateConfig	:=	11;<br/>				Else<br/>					iWriteLumgateConfig	:=	4005;<br/>				End_If;<br/>			End_If;<br/>		Elsif iConfigType = 5 then<br/>			iWriteLumgateConfig	:=	5005;<br/>		Elsif iConfigType = 6 then<br/>			iWriteLumgateConfig	:=	6005;<br/>		End_if;<br/>
									<br/>	11:	xRequestWritingLumgateConfig	:=	False;<br/>		iWriteLumgateConfig	:=	0;<br/>End_Case;<br/>
								</p>
							</html>
						</worksheet>
						<worksheet name="FileManager">
							<html xmlns="http://www.w3.org/1999/xhtml">
								<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">(* FB_FileHandling / FileManager *)<br/>Case iFileHandling Of<br/>
									<br/>0:<br/>	If udtFileHandler.xRequest Then<br/>		Case udtFileHandler.iTasktype Of<br/>			0:	iFileHandling	:=	 20; (* Write data from ram to file *)<br/>			2:	iFileHandling	:=	 60; (* Remove file *)<br/>			3:	iFileHandling	:=	 80; (* Read data from file to ram *)<br/>		End_Case;<br/>	End_If;<br/>
									<br/>20:<br/>	xFoExecute		:=	 True; <br/>	strFoName			:=	 udtFileHandler.strFileNameTarget;<br/>	iFileHandling	:=	 21;<br/>
									<br/>21:<br/>	If xFoDone Then<br/>		uiFileHandleTarget	:=	 uiFoHandle;<br/>		xFoExecute		:=	 False;<br/>		xFsExecute		:=	 True;<br/>		uiFsHandle		:=	 uiFileHandleTarget;<br/>		diFsPosition	:=	 Int_To_Dint(Neg(udtFileHandler.iAmountOverwriteChar));<br/>		(*If udtFileHandler.iFileNumber &lt;&gt; 0 &amp; udtFileHandler.iFileNumber &lt; 81 Then<br/>			iTempNumber	:=	 udtFileHandler.iFileNumber;<br/>			strFileMem.ArrFileInfo[iTempNumber].udiEndPointer	:=	 strFileMem.ArrFileInfo[iTempNumber].udiEndPointer - Int_To_Udint(udtFileHandler.iAmountOverwriteChar);<br/>		End_If;*)<br/>		uiFsMode		:=	 Uint#2;<br/>		iFileHandling	:=	 22;<br/>	End_If;<br/>
									<br/>22:<br/>	If xFsDone Then<br/>		xFsExecute		:=	 False;<br/>		xFwExecute		:=	 True;<br/>		uiFwHandle		:=	 uiFileHandleTarget;<br/>		udFwLength		:=	 udtFileHandler.udiAmountData;<br/>	(*	If udtFileHandler.iFileNumber &lt;&gt; 0 &amp; udtFileHandler.iFileNumber &lt; 81 Then<br/>			iTempNumber	:=	 udtFileHandler.iFileNumber;<br/>			strFileMem.ArrFileInfo[iTempNumber].udiEndPointer	:=	 strFileMem.ArrFileInfo[iTempNumber].udiEndPointer + udFwLength;<br/>		End_If;*)<br/>		iFileHandling	:=	 23;<br/>	End_If;<br/>
									<br/>23:<br/>	If xFwDone Then<br/>		xFwExecute		:=	 False;<br/>		xFcExecute		:=	 True;<br/>		uiFcHandle		:=	 uiFileHandleTarget;<br/>		iFileHandling	:=	 24;<br/>	End_If;<br/>
									<br/>24:	<br/>	If xFcDone Then<br/>		xFcExecute		:=	 False;<br/>		iFileHandling	:=	 100;<br/>	End_If;<br/>
									<br/>60:	<br/>	xFrExecute		:=	 True;<br/>	strFrName			:=	 udtFileHandler.strFileNameTarget;<br/>	iFileHandling	:=	 61;<br/>
									<br/>61:	<br/>	If xFrDone or xFrError Then<br/>		xFrExecute		:=	 False;<br/>		iFileHandling	:=	 100;<br/>	End_If;<br/>
									<br/>80:	<br/>	xFoExecute		:=	 True;<br/>	strFoName			:=	 udtFileHandler.strFileNameSource;<br/>	iFileHandling	:=	 81;<br/>
									<br/>81:	<br/>	If xFoDone Then<br/>		uiFileHandleSource	:=	 uiFoHandle;<br/>		xFoExecute			:=	 False;<br/>		xFsExecute			:=	 True;<br/>		uiFsHandle			:=	 uiFileHandleSource;<br/>		diFsPosition		:=	 Udint_To_Dint(udtFileHandler.udiReadPosition);<br/>		uiFsMode			:=	 Uint#0;<br/>		iFileHandling		:=	 82;<br/>	End_If;<br/>
									<br/>82:	<br/>	If xFsDone Then<br/>		xFsExecute		:=	 False;<br/>		xFreExecute		:=	 True;<br/>		uiFreHandle		:=	 uiFileHandleSource;<br/>		udFreMaxLength	:=	 Udint#5001;<br/>		iFileHandling	:=	 83;<br/>	End_If;<br/>
									<br/>83:	<br/>	If xFreDone Then<br/>		xFreExecute		:=	 False;<br/>		xFcExecute		:=	 True;<br/>		udtFileHandler.udiReadPosition	:=	 udtFileHandler.udiReadPosition + udFreLengthRead;<br/>		udiTempAmount	:=	 udFreLengthRead;<br/>		uiFcHandle		:=	 uiFileHandleSource;<br/>		iFileHandling	:=	 84;<br/>	End_If;<br/>
									<br/>84:	<br/>	If xFcDone Then<br/>		xFcExecute			:=	 False;<br/>		xWaitFileHandling	:=	 True;<br/>		iFileHandling		:=	 85;<br/>	End_If;	<br/>
									<br/>85:	<br/>	If Not xWaitFileHandling Then<br/>			udtFileHandler.xRequest	:=	 False;<br/>		iFileHandling				:=	 0;<br/>	End_If;<br/>
									<br/>100:<br/>	udtFileHandler.iAmountOverwriteChar	:=	 0;<br/>	udtFileHandler.iFileNumber			:=	 0;<br/>	udtFileHandler.iTasktype			:=	 0;<br/>	udtFileHandler.strFileNameSource	:=	 '';<br/>	udtFileHandler.strFileNameTarget	:=	 '';<br/>	udtFileHandler.udiAmountData		:=	 Udint#0;<br/>	udtFileHandler.udiReadPosition		:=	 Udint#0;<br/>	udtFileHandler.xMultipleRun			:=	 False;<br/>	udtFileHandler.xRequest				:=	 False;<br/>	udtFileHandler.xFileMemorySource	:=	 False;<br/>	iFileHandling						:=	 0;<br/>End_Case;<br/>
								</p>
							</html>
						</worksheet>
						<worksheet name="ServiceBlocks">
							<html xmlns="http://www.w3.org/1999/xhtml">
								<p xml:space="preserve" xmlns="http://www.w3.org/1999/xhtml">(* FB_FileHandling / ServiceBlocks *)<br/>(* File Open *)<br/>
									<br/>File_Open_Flash(Execute	:=	xFoExecute,<br/>Name					:=	strFoName);<br/>
									<br/>xFoDone					:=	File_Open_Flash.Done;<br/>uiFoHandle				:=	File_Open_Flash.Handle;<br/>xFoError				:=	File_Open_Flash.Error;<br/>uiFoErrorId				:=	File_Open_Flash.ErrorID;<br/>
									<br/>(************************************************************************)<br/>(* File Seek *)<br/>
									<br/>File_Seek_Flash(Execute	:= xFsExecute,<br/>Handle					:= uiFsHandle,<br/>Position				:= diFsPosition,<br/>Mode					:= uiFsMode);<br/>
									<br/>xFsDone					:=	File_Seek_Flash.Done;<br/>xFsError				:=	File_Seek_Flash.Error;<br/>uiFsErrorId				:=	File_Seek_Flash.ErrorID;<br/>
									<br/>(************************************************************************)<br/>(* File Write *)<br/>
									<br/>File_Write_Flash(Execute:= xFwExecute,<br/>Handle					:= uiFwHandle,<br/>Buffer					:= arrFBuffer,<br/>Length					:= udFwLength);<br/>
									<br/>xFwDone					:=	File_Write_Flash.Done;<br/>udFwLengthWritten		:=	File_Write_Flash.LengthWritten;<br/>arrFBuffer				:=	File_Write_Flash.Buffer;<br/>xFwError				:=	File_Write_Flash.Error;<br/>uiFwErrorId				:=	File_Write_Flash.ErrorID;<br/>
									<br/>(************************************************************************)<br/>(* File Read *)<br/>
									<br/>File_Read_Flash(Execute	:= xFreExecute,<br/>Handle					:= uiFreHandle,<br/>Buffer					:= arrFBuffer,<br/>MaxLength				:= udFreMaxLength);<br/>
									<br/>xFreDone				:=	File_Read_Flash.Done;<br/>udFreLengthRead			:=	File_Read_Flash.LengthRead;<br/>arrFBuffer				:=	File_Read_Flash.Buffer;<br/>xFreError				:=	File_Read_Flash.Error;<br/>uiFreErrorId			:=	File_Read_Flash.ErrorID;<br/>
									<br/>(************************************************************************)<br/>(* File Close *)<br/>
									<br/>File_Close_Flash(Execute:= xFcExecute,<br/>Handle					:= uiFcHandle);<br/>
									<br/>xFcDone					:=	File_Close_Flash.Done;<br/>xFcError				:=	File_Close_Flash.Error;<br/>uiFcErrorId				:=	File_Close_Flash.ErrorID;<br/>
									<br/>(************************************************************************)<br/>(* File Remove *)<br/>
									<br/>File_Remove_Flash(Execute:= xFrExecute,<br/>Name					:= strFrName);<br/>
									<br/>xFrDone					:=	File_Remove_Flash.Done;<br/>xFrError				:=	File_Remove_Flash.Error;<br/>uiFrErrorId				:=	File_Remove_Flash.ErrorID;<br/>
									<br/>(************************************************************************)<br/>(* Buf To String *)<br/>
									<br/>TranslateData(REQ		:= xTranslateRequest,<br/>BUF_FORMAT				:= False,<br/>BUF_OFFS				:= diTranslateOffset,<br/>BUF_CNT					:= diTranslateCount,<br/>BUFFER					:= arrFBuffer,<br/>DST						:= strLineData);<br/>
									<br/>xTranslateDone			:=	TranslateData.DONE;<br/>xTranslateError			:=	TranslateData.ERROR;<br/>iTranslateStatus		:=	TranslateData.STATUS;<br/>arrFBuffer				:=	TranslateData.BUFFER;<br/>strLineData				:=	TranslateData.DST;<br/>
								</p>
							</html>
						</worksheet>
					</ST>
				</body>
				<documentation>
					<html xmlns="http://www.w3.org/1999/xhtml">
						<div xml:space="preserve" id="MWTDESCRIPTION" wsName="FB_FileHandling_01T" xmlns="http://www.w3.org/1999/xhtml">V2.01 Changes:<br/>- add 2nd file format for Lumgate configuration<br/>	- Seperator "File format version;2"<br/>- saving remanent Threshold information<br/>	- Analog average time<br/>	- Threshold hysteresis<br/>	- Threshold option names<br/>	- Active Threshold options<br/>- saving remanent current curves<br/>	- 4 curves a 23 values for 240 Lumgates<br/>	- write in next versions into a new file to reduce remanent memory<br/>
						</div>
					</html>
				</documentation>
			</pou>
		</pous>
	</types>
	<instances>
		<configurations/>
	</instances>
</project>